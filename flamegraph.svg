<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="230" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="213.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="213.00"> </text><svg id="frames" x="10" width="1180" total_samples="817"><g><title>&lt;(Alt2,Alt3) as winnow::combinator::branch::Alt&lt;I,Output,Error&gt;&gt;::choice (1 samples, 0.12%)</title><rect x="0.0000%" y="149" width="0.1224%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>&lt;hyper::server::shutdown::Graceful&lt;I,S,F,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="0.1224%" y="149" width="0.1224%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.3724%" y="159.50"></text></g><g><title>&lt;rocket::trip_wire::TripWire as core::future::future::Future&gt;::poll::_{{closure}} (1 samples, 0.12%)</title><rect x="0.2448%" y="149" width="0.1224%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.4948%" y="159.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="0.3672%" y="149" width="0.1224%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.6172%" y="159.50"></text></g><g><title>[libc.so.6] (3 samples, 0.37%)</title><rect x="0.4896%" y="133" width="0.3672%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="3"/><text x="0.7396%" y="143.50"></text></g><g><title>tokio::runtime::scheduler::Handle::spawn (3 samples, 0.37%)</title><rect x="0.4896%" y="117" width="0.3672%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="3"/><text x="0.7396%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.24%)</title><rect x="0.6120%" y="101" width="0.2448%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="2"/><text x="0.8620%" y="111.50"></text></g><g><title>__rdl_alloc (2 samples, 0.24%)</title><rect x="0.6120%" y="85" width="0.2448%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="0.8620%" y="95.50"></text></g><g><title>__posix_memalign (2 samples, 0.24%)</title><rect x="0.6120%" y="69" width="0.2448%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="2"/><text x="0.8620%" y="79.50"></text></g><g><title>_mid_memalign.isra.0 (2 samples, 0.24%)</title><rect x="0.6120%" y="53" width="0.2448%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="2"/><text x="0.8620%" y="63.50"></text></g><g><title>_ZN5tokio7runtime4task4list19OwnedTasks$LT$S$GT$10bind_inner17hcd5331f4c73e7aacE.llvm.10703699227954456012 (1 samples, 0.12%)</title><rect x="0.8568%" y="133" width="0.1224%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="1.1068%" y="143.50"></text></g><g><title>std::env::vars_os (1 samples, 0.12%)</title><rect x="0.9792%" y="133" width="0.1224%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="1"/><text x="1.2292%" y="143.50"></text></g><g><title>std::io::error::Error::kind (2 samples, 0.24%)</title><rect x="1.1016%" y="133" width="0.2448%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="2"/><text x="1.3516%" y="143.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.12%)</title><rect x="1.3464%" y="133" width="0.1224%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="1"/><text x="1.5964%" y="143.50"></text></g><g><title>__GI___sigaltstack (1 samples, 0.12%)</title><rect x="1.3464%" y="117" width="0.1224%" height="15" fill="rgb(217,207,13)" fg:x="11" fg:w="1"/><text x="1.5964%" y="127.50"></text></g><g><title>[unknown] (10 samples, 1.22%)</title><rect x="0.4896%" y="149" width="1.2240%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="10"/><text x="0.7396%" y="159.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (2 samples, 0.24%)</title><rect x="1.4688%" y="133" width="0.2448%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="2"/><text x="1.7188%" y="143.50"></text></g><g><title>&lt;hyper::common::exec::Exec as hyper::common::exec::NewSvcExec&lt;I,N,S,E,W&gt;&gt;::execute_new_svc (1 samples, 0.12%)</title><rect x="1.8360%" y="133" width="0.1224%" height="15" fill="rgb(210,31,41)" fg:x="15" fg:w="1"/><text x="2.0860%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="1.8360%" y="117" width="0.1224%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="1"/><text x="2.0860%" y="127.50"></text></g><g><title>__rdl_alloc (5 samples, 0.61%)</title><rect x="1.7136%" y="149" width="0.6120%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="5"/><text x="1.9636%" y="159.50"></text></g><g><title>__posix_memalign (3 samples, 0.37%)</title><rect x="1.9584%" y="133" width="0.3672%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="3"/><text x="2.2084%" y="143.50"></text></g><g><title>_mid_memalign.isra.0 (3 samples, 0.37%)</title><rect x="1.9584%" y="117" width="0.3672%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="3"/><text x="2.2084%" y="127.50"></text></g><g><title>_dl_sysdep_parse_arguments (1 samples, 0.12%)</title><rect x="2.9376%" y="85" width="0.1224%" height="15" fill="rgb(221,5,38)" fg:x="24" fg:w="1"/><text x="3.1876%" y="95.50"></text></g><g><title>_start (9 samples, 1.10%)</title><rect x="2.3256%" y="149" width="1.1016%" height="15" fill="rgb(247,18,42)" fg:x="19" fg:w="9"/><text x="2.5756%" y="159.50"></text></g><g><title>_dl_start (4 samples, 0.49%)</title><rect x="2.9376%" y="133" width="0.4896%" height="15" fill="rgb(241,131,45)" fg:x="24" fg:w="4"/><text x="3.1876%" y="143.50"></text></g><g><title>_dl_start_final (4 samples, 0.49%)</title><rect x="2.9376%" y="117" width="0.4896%" height="15" fill="rgb(249,31,29)" fg:x="24" fg:w="4"/><text x="3.1876%" y="127.50"></text></g><g><title>_dl_sysdep_start (4 samples, 0.49%)</title><rect x="2.9376%" y="101" width="0.4896%" height="15" fill="rgb(225,111,53)" fg:x="24" fg:w="4"/><text x="3.1876%" y="111.50"></text></g><g><title>dl_main (3 samples, 0.37%)</title><rect x="3.0600%" y="85" width="0.3672%" height="15" fill="rgb(238,160,17)" fg:x="25" fg:w="3"/><text x="3.3100%" y="95.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.37%)</title><rect x="3.0600%" y="69" width="0.3672%" height="15" fill="rgb(214,148,48)" fg:x="25" fg:w="3"/><text x="3.3100%" y="79.50"></text></g><g><title>anon.4e553fc5b08ddafe782320b1d1b2503f.306.llvm.8530070527314117630 (1 samples, 0.12%)</title><rect x="3.4272%" y="149" width="0.1224%" height="15" fill="rgb(232,36,49)" fg:x="28" fg:w="1"/><text x="3.6772%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="3.4272%" y="133" width="0.1224%" height="15" fill="rgb(209,103,24)" fg:x="28" fg:w="1"/><text x="3.6772%" y="143.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="3.4272%" y="117" width="0.1224%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="1"/><text x="3.6772%" y="127.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="3.4272%" y="101" width="0.1224%" height="15" fill="rgb(213,181,19)" fg:x="28" fg:w="1"/><text x="3.6772%" y="111.50"></text></g><g><title>clone3 (3 samples, 0.37%)</title><rect x="3.5496%" y="149" width="0.3672%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="3"/><text x="3.7996%" y="159.50"></text></g><g><title>fillin_rpath.isra.0 (1 samples, 0.12%)</title><rect x="3.9168%" y="149" width="0.1224%" height="15" fill="rgb(241,83,37)" fg:x="32" fg:w="1"/><text x="4.1668%" y="159.50"></text></g><g><title>hyper::server::server::Server&lt;I,S,E&gt;::poll_watch (2 samples, 0.24%)</title><rect x="4.0392%" y="149" width="0.2448%" height="15" fill="rgb(233,36,39)" fg:x="33" fg:w="2"/><text x="4.2892%" y="159.50"></text></g><g><title>mio::net::tcp::listener::TcpListener::accept (3 samples, 0.37%)</title><rect x="4.2840%" y="149" width="0.3672%" height="15" fill="rgb(226,3,54)" fg:x="35" fg:w="3"/><text x="4.5340%" y="159.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (11 samples, 1.35%)</title><rect x="4.6512%" y="149" width="1.3464%" height="15" fill="rgb(245,192,40)" fg:x="38" fg:w="11"/><text x="4.9012%" y="159.50"></text></g><g><title>syscall (10 samples, 1.22%)</title><rect x="4.7736%" y="133" width="1.2240%" height="15" fill="rgb(238,167,29)" fg:x="39" fg:w="10"/><text x="5.0236%" y="143.50"></text></g><g><title>std::sys::pal::unix::os::errno (2 samples, 0.24%)</title><rect x="5.9976%" y="149" width="0.2448%" height="15" fill="rgb(232,182,51)" fg:x="49" fg:w="2"/><text x="6.2476%" y="159.50"></text></g><g><title>__errno_location (1 samples, 0.12%)</title><rect x="6.1200%" y="133" width="0.1224%" height="15" fill="rgb(231,60,39)" fg:x="50" fg:w="1"/><text x="6.3700%" y="143.50"></text></g><g><title>std::sys_common::net::TcpStream::peer_addr (1 samples, 0.12%)</title><rect x="6.2424%" y="149" width="0.1224%" height="15" fill="rgb(208,69,12)" fg:x="51" fg:w="1"/><text x="6.4924%" y="159.50"></text></g><g><title>__GI___getpeername (1 samples, 0.12%)</title><rect x="6.2424%" y="133" width="0.1224%" height="15" fill="rgb(235,93,37)" fg:x="51" fg:w="1"/><text x="6.4924%" y="143.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (1 samples, 0.12%)</title><rect x="6.3647%" y="149" width="0.1224%" height="15" fill="rgb(213,116,39)" fg:x="52" fg:w="1"/><text x="6.6147%" y="159.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::poll_accept (1 samples, 0.12%)</title><rect x="6.4871%" y="149" width="0.1224%" height="15" fill="rgb(222,207,29)" fg:x="53" fg:w="1"/><text x="6.7371%" y="159.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (1 samples, 0.12%)</title><rect x="6.6095%" y="149" width="0.1224%" height="15" fill="rgb(206,96,30)" fg:x="54" fg:w="1"/><text x="6.8595%" y="159.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (1 samples, 0.12%)</title><rect x="6.7319%" y="149" width="0.1224%" height="15" fill="rgb(218,138,4)" fg:x="55" fg:w="1"/><text x="6.9819%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="6.7319%" y="133" width="0.1224%" height="15" fill="rgb(250,191,14)" fg:x="55" fg:w="1"/><text x="6.9819%" y="143.50"></text></g><g><title>myweb (57 samples, 6.98%)</title><rect x="0.0000%" y="165" width="6.9767%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="57"/><text x="0.2500%" y="175.50">myweb</text></g><g><title>tokio::sync::notify::Notified::poll_notified (1 samples, 0.12%)</title><rect x="6.8543%" y="149" width="0.1224%" height="15" fill="rgb(206,27,48)" fg:x="56" fg:w="1"/><text x="7.1043%" y="159.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="6.9767%" y="149" width="0.1224%" height="15" fill="rgb(225,35,8)" fg:x="57" fg:w="1"/><text x="7.2267%" y="159.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1 samples, 0.12%)</title><rect x="7.0991%" y="149" width="0.1224%" height="15" fill="rgb(250,213,24)" fg:x="58" fg:w="1"/><text x="7.3491%" y="159.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h36c34ef83d4e25dbE.llvm.2330631672319492856 (2 samples, 0.24%)</title><rect x="7.2215%" y="133" width="0.2448%" height="15" fill="rgb(247,123,22)" fg:x="59" fg:w="2"/><text x="7.4715%" y="143.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (4 samples, 0.49%)</title><rect x="7.2215%" y="149" width="0.4896%" height="15" fill="rgb(231,138,38)" fg:x="59" fg:w="4"/><text x="7.4715%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (2 samples, 0.24%)</title><rect x="7.4663%" y="133" width="0.2448%" height="15" fill="rgb(231,145,46)" fg:x="61" fg:w="2"/><text x="7.7163%" y="143.50"></text></g><g><title>&lt;F as rocket::route::handler::Handler&gt;::handle (1 samples, 0.12%)</title><rect x="7.7111%" y="149" width="0.1224%" height="15" fill="rgb(251,118,11)" fg:x="63" fg:w="1"/><text x="7.9611%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.12%)</title><rect x="7.8335%" y="149" width="0.1224%" height="15" fill="rgb(217,147,25)" fg:x="64" fg:w="1"/><text x="8.0835%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.12%)</title><rect x="7.9559%" y="149" width="0.1224%" height="15" fill="rgb(247,81,37)" fg:x="65" fg:w="1"/><text x="8.2059%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="7.9559%" y="133" width="0.1224%" height="15" fill="rgb(209,12,38)" fg:x="65" fg:w="1"/><text x="8.2059%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="8.0783%" y="149" width="0.1224%" height="15" fill="rgb(227,1,9)" fg:x="66" fg:w="1"/><text x="8.3283%" y="159.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.24%)</title><rect x="8.2007%" y="117" width="0.2448%" height="15" fill="rgb(248,47,43)" fg:x="67" fg:w="2"/><text x="8.4507%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.37%)</title><rect x="8.2007%" y="149" width="0.3672%" height="15" fill="rgb(221,10,30)" fg:x="67" fg:w="3"/><text x="8.4507%" y="159.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (3 samples, 0.37%)</title><rect x="8.2007%" y="133" width="0.3672%" height="15" fill="rgb(210,229,1)" fg:x="67" fg:w="3"/><text x="8.4507%" y="143.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (1 samples, 0.12%)</title><rect x="8.4455%" y="117" width="0.1224%" height="15" fill="rgb(222,148,37)" fg:x="69" fg:w="1"/><text x="8.6955%" y="127.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="8.5679%" y="149" width="0.1224%" height="15" fill="rgb(234,67,33)" fg:x="70" fg:w="1"/><text x="8.8179%" y="159.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="8.6903%" y="149" width="0.1224%" height="15" fill="rgb(247,98,35)" fg:x="71" fg:w="1"/><text x="8.9403%" y="159.50"></text></g><g><title>&lt;futures_channel::mpsc::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="8.8127%" y="149" width="0.1224%" height="15" fill="rgb(247,138,52)" fg:x="72" fg:w="1"/><text x="9.0627%" y="159.50"></text></g><g><title>&lt;hyper::body::body::Body as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="8.9351%" y="149" width="0.1224%" height="15" fill="rgb(213,79,30)" fg:x="73" fg:w="1"/><text x="9.1851%" y="159.50"></text></g><g><title>&lt;hyper::body::body::Body as http_body::Body&gt;::poll_data (1 samples, 0.12%)</title><rect x="9.0575%" y="149" width="0.1224%" height="15" fill="rgb(246,177,23)" fg:x="74" fg:w="1"/><text x="9.3075%" y="159.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (2 samples, 0.24%)</title><rect x="9.1799%" y="149" width="0.2448%" height="15" fill="rgb(230,62,27)" fg:x="75" fg:w="2"/><text x="9.4299%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="9.3023%" y="133" width="0.1224%" height="15" fill="rgb(216,154,8)" fg:x="76" fg:w="1"/><text x="9.5523%" y="143.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (2 samples, 0.24%)</title><rect x="9.4247%" y="133" width="0.2448%" height="15" fill="rgb(244,35,45)" fg:x="77" fg:w="2"/><text x="9.6747%" y="143.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (3 samples, 0.37%)</title><rect x="9.4247%" y="149" width="0.3672%" height="15" fill="rgb(251,115,12)" fg:x="77" fg:w="3"/><text x="9.6747%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="9.6695%" y="133" width="0.1224%" height="15" fill="rgb(240,54,50)" fg:x="79" fg:w="1"/><text x="9.9195%" y="143.50"></text></g><g><title>&lt;hyper::server::shutdown::GracefulWatcher as hyper::server::server::Watcher&lt;I,S,E&gt;&gt;::watch (2 samples, 0.24%)</title><rect x="9.7919%" y="149" width="0.2448%" height="15" fill="rgb(233,84,52)" fg:x="80" fg:w="2"/><text x="10.0419%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="9.9143%" y="133" width="0.1224%" height="15" fill="rgb(207,117,47)" fg:x="81" fg:w="1"/><text x="10.1643%" y="143.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="10.0367%" y="149" width="0.1224%" height="15" fill="rgb(249,43,39)" fg:x="82" fg:w="1"/><text x="10.2867%" y="159.50"></text></g><g><title>&lt;rocket::ext::CancellableIo&lt;F,I&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="10.1591%" y="149" width="0.1224%" height="15" fill="rgb(209,38,44)" fg:x="83" fg:w="1"/><text x="10.4091%" y="159.50"></text></g><g><title>&lt;rocket::ext::CancellableIo&lt;F,I&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (2 samples, 0.24%)</title><rect x="10.2815%" y="149" width="0.2448%" height="15" fill="rgb(236,212,23)" fg:x="84" fg:w="2"/><text x="10.5315%" y="159.50"></text></g><g><title>&lt;rocket::trip_wire::TripWire as core::future::future::Future&gt;::poll::_{{closure}} (2 samples, 0.24%)</title><rect x="10.5263%" y="149" width="0.2448%" height="15" fill="rgb(242,79,21)" fg:x="86" fg:w="2"/><text x="10.7763%" y="159.50"></text></g><g><title>&lt;rocket::trip_wire::TripWire as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="10.7711%" y="149" width="0.1224%" height="15" fill="rgb(211,96,35)" fg:x="88" fg:w="1"/><text x="11.0211%" y="159.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="10.7711%" y="133" width="0.1224%" height="15" fill="rgb(253,215,40)" fg:x="88" fg:w="1"/><text x="11.0211%" y="143.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="10.8935%" y="149" width="0.1224%" height="15" fill="rgb(211,81,21)" fg:x="89" fg:w="1"/><text x="11.1435%" y="159.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="11.0159%" y="149" width="0.1224%" height="15" fill="rgb(208,190,38)" fg:x="90" fg:w="1"/><text x="11.2659%" y="159.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.24%)</title><rect x="11.1383%" y="149" width="0.2448%" height="15" fill="rgb(235,213,38)" fg:x="91" fg:w="2"/><text x="11.3883%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.12%)</title><rect x="11.3831%" y="149" width="0.1224%" height="15" fill="rgb(237,122,38)" fg:x="93" fg:w="1"/><text x="11.6331%" y="159.50"></text></g><g><title>tokio::sync::watch::state::AtomicState::load (1 samples, 0.12%)</title><rect x="11.3831%" y="133" width="0.1224%" height="15" fill="rgb(244,218,35)" fg:x="93" fg:w="1"/><text x="11.6331%" y="143.50"></text></g><g><title>_ZN5hyper5proto2h18dispatch32Dispatcher$LT$D$C$Bs$C$I$C$T$GT$10poll_inner17hcfd347e6d6de922aE.llvm.7481067798590672222 (1 samples, 0.12%)</title><rect x="11.5055%" y="133" width="0.1224%" height="15" fill="rgb(240,68,47)" fg:x="94" fg:w="1"/><text x="11.7555%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.12%)</title><rect x="11.6279%" y="133" width="0.1224%" height="15" fill="rgb(210,16,53)" fg:x="95" fg:w="1"/><text x="11.8779%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;rocket::request::request::Request&gt; (1 samples, 0.12%)</title><rect x="11.7503%" y="133" width="0.1224%" height="15" fill="rgb(235,124,12)" fg:x="96" fg:w="1"/><text x="12.0003%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="11.7503%" y="117" width="0.1224%" height="15" fill="rgb(224,169,11)" fg:x="96" fg:w="1"/><text x="12.0003%" y="127.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (1 samples, 0.12%)</title><rect x="11.8727%" y="133" width="0.1224%" height="15" fill="rgb(250,166,2)" fg:x="97" fg:w="1"/><text x="12.1227%" y="143.50"></text></g><g><title>[myweb] (5 samples, 0.61%)</title><rect x="11.5055%" y="149" width="0.6120%" height="15" fill="rgb(242,216,29)" fg:x="94" fg:w="5"/><text x="11.7555%" y="159.50"></text></g><g><title>markdown::construct::flow::after (1 samples, 0.12%)</title><rect x="11.9951%" y="133" width="0.1224%" height="15" fill="rgb(230,116,27)" fg:x="98" fg:w="1"/><text x="12.2451%" y="143.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (1 samples, 0.12%)</title><rect x="11.9951%" y="117" width="0.1224%" height="15" fill="rgb(228,99,48)" fg:x="98" fg:w="1"/><text x="12.2451%" y="127.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="11.9951%" y="101" width="0.1224%" height="15" fill="rgb(253,11,6)" fg:x="98" fg:w="1"/><text x="12.2451%" y="111.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write_vectored (1 samples, 0.12%)</title><rect x="12.1175%" y="133" width="0.1224%" height="15" fill="rgb(247,143,39)" fg:x="99" fg:w="1"/><text x="12.3675%" y="143.50"></text></g><g><title>__GI___writev (1 samples, 0.12%)</title><rect x="12.1175%" y="117" width="0.1224%" height="15" fill="rgb(236,97,10)" fg:x="99" fg:w="1"/><text x="12.3675%" y="127.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="12.1175%" y="101" width="0.1224%" height="15" fill="rgb(233,208,19)" fg:x="99" fg:w="1"/><text x="12.3675%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="12.2399%" y="133" width="0.1224%" height="15" fill="rgb(216,164,2)" fg:x="100" fg:w="1"/><text x="12.4899%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="12.2399%" y="117" width="0.1224%" height="15" fill="rgb(220,129,5)" fg:x="100" fg:w="1"/><text x="12.4899%" y="127.50"></text></g><g><title>&lt;core::char::ToLowercase as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="12.3623%" y="133" width="0.1224%" height="15" fill="rgb(242,17,10)" fg:x="101" fg:w="1"/><text x="12.6123%" y="143.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="12.4847%" y="133" width="0.1224%" height="15" fill="rgb(242,107,0)" fg:x="102" fg:w="1"/><text x="12.7347%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="12.4847%" y="117" width="0.1224%" height="15" fill="rgb(251,28,31)" fg:x="102" fg:w="1"/><text x="12.7347%" y="127.50"></text></g><g><title>[myweb] (1 samples, 0.12%)</title><rect x="12.6071%" y="133" width="0.1224%" height="15" fill="rgb(233,223,10)" fg:x="103" fg:w="1"/><text x="12.8571%" y="143.50"></text></g><g><title>_ZN5hyper6common5drain5Watch5watch28_$u7b$$u7b$closure$u7d$$u7d$17h2769c61c8f2905deE.llvm.15032919299783120568 (1 samples, 0.12%)</title><rect x="12.6071%" y="117" width="0.1224%" height="15" fill="rgb(215,21,27)" fg:x="103" fg:w="1"/><text x="12.8571%" y="127.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (1 samples, 0.12%)</title><rect x="12.7295%" y="117" width="0.1224%" height="15" fill="rgb(232,23,21)" fg:x="104" fg:w="1"/><text x="12.9795%" y="127.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.12%)</title><rect x="12.8519%" y="117" width="0.1224%" height="15" fill="rgb(244,5,23)" fg:x="105" fg:w="1"/><text x="13.1019%" y="127.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.12%)</title><rect x="12.9743%" y="117" width="0.1224%" height="15" fill="rgb(226,81,46)" fg:x="106" fg:w="1"/><text x="13.2243%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.61%)</title><rect x="12.7295%" y="133" width="0.6120%" height="15" fill="rgb(247,70,30)" fg:x="104" fg:w="5"/><text x="12.9795%" y="143.50"></text></g><g><title>markdown::construct::content::chunk_inside (2 samples, 0.24%)</title><rect x="13.0967%" y="117" width="0.2448%" height="15" fill="rgb(212,68,19)" fg:x="107" fg:w="2"/><text x="13.3467%" y="127.50"></text></g><g><title>_ZN4core3ptr43drop_in_place$LT$markdown..state..State$GT$17h5bbe46dfc0ea8f92E.llvm.15959340908883416241 (8 samples, 0.98%)</title><rect x="13.3415%" y="133" width="0.9792%" height="15" fill="rgb(240,187,13)" fg:x="109" fg:w="8"/><text x="13.5915%" y="143.50"></text></g><g><title>_ZN4core3ptr44drop_in_place$LT$hyper..body..body..Body$GT$17h2993193c74c820e1E.llvm.7481067798590672222 (2 samples, 0.24%)</title><rect x="14.3207%" y="133" width="0.2448%" height="15" fill="rgb(223,113,26)" fg:x="117" fg:w="2"/><text x="14.5707%" y="143.50"></text></g><g><title>_ZN4core5slice4sort7recurse17h4054a5b6de48c9c1E.llvm.6085742288960035480 (1 samples, 0.12%)</title><rect x="14.5655%" y="133" width="0.1224%" height="15" fill="rgb(206,192,2)" fg:x="119" fg:w="1"/><text x="14.8155%" y="143.50"></text></g><g><title>_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h7eba1e183ff7be93E.llvm.13623877942257554558 (1 samples, 0.12%)</title><rect x="14.6879%" y="133" width="0.1224%" height="15" fill="rgb(241,108,4)" fg:x="120" fg:w="1"/><text x="14.9379%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="14.6879%" y="117" width="0.1224%" height="15" fill="rgb(247,173,49)" fg:x="120" fg:w="1"/><text x="14.9379%" y="127.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h385b2b5b317704a3E.llvm.6949925176515587809 (1 samples, 0.12%)</title><rect x="14.8103%" y="133" width="0.1224%" height="15" fill="rgb(224,114,35)" fg:x="121" fg:w="1"/><text x="15.0603%" y="143.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="14.8103%" y="117" width="0.1224%" height="15" fill="rgb(245,159,27)" fg:x="121" fg:w="1"/><text x="15.0603%" y="127.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="15.4223%" y="85" width="0.1224%" height="15" fill="rgb(245,172,44)" fg:x="126" fg:w="1"/><text x="15.6723%" y="95.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (6 samples, 0.73%)</title><rect x="14.9327%" y="133" width="0.7344%" height="15" fill="rgb(236,23,11)" fg:x="122" fg:w="6"/><text x="15.1827%" y="143.50"></text></g><g><title>realloc (4 samples, 0.49%)</title><rect x="15.1775%" y="117" width="0.4896%" height="15" fill="rgb(205,117,38)" fg:x="124" fg:w="4"/><text x="15.4275%" y="127.50"></text></g><g><title>_int_realloc (3 samples, 0.37%)</title><rect x="15.2999%" y="101" width="0.3672%" height="15" fill="rgb(237,72,25)" fg:x="125" fg:w="3"/><text x="15.5499%" y="111.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="15.5447%" y="85" width="0.1224%" height="15" fill="rgb(244,70,9)" fg:x="127" fg:w="1"/><text x="15.7947%" y="95.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="15.5447%" y="69" width="0.1224%" height="15" fill="rgb(217,125,39)" fg:x="127" fg:w="1"/><text x="15.7947%" y="79.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17h7eae16868d1d576dE.llvm.11625509193021834514 (3 samples, 0.37%)</title><rect x="15.6671%" y="133" width="0.3672%" height="15" fill="rgb(235,36,10)" fg:x="128" fg:w="3"/><text x="15.9171%" y="143.50"></text></g><g><title>_ZN5tokio7runtime4task4list19OwnedTasks$LT$S$GT$10bind_inner17hcd5331f4c73e7aacE.llvm.10703699227954456012 (1 samples, 0.12%)</title><rect x="16.0343%" y="133" width="0.1224%" height="15" fill="rgb(251,123,47)" fg:x="131" fg:w="1"/><text x="16.2843%" y="143.50"></text></g><g><title>_ZN5tokio7runtime4time54_$LT$impl$u20$tokio..runtime..time..handle..Handle$GT$15process_at_time28_$u7b$$u7b$closure$u7d$$u7d$17h8ad111a431310b49E.llvm.2330631672319492856 (1 samples, 0.12%)</title><rect x="16.1567%" y="133" width="0.1224%" height="15" fill="rgb(221,13,13)" fg:x="132" fg:w="1"/><text x="16.4067%" y="143.50"></text></g><g><title>_ZN63_$LT$markdown..state..State$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf6424046d02ca269E.llvm.15959340908883416241 (2 samples, 0.24%)</title><rect x="16.2791%" y="133" width="0.2448%" height="15" fill="rgb(238,131,9)" fg:x="133" fg:w="2"/><text x="16.5291%" y="143.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h184154df8c24ea0bE.llvm.5555595203798231900 (2 samples, 0.24%)</title><rect x="16.5239%" y="133" width="0.2448%" height="15" fill="rgb(211,50,8)" fg:x="135" fg:w="2"/><text x="16.7739%" y="143.50"></text></g><g><title>_ZN8markdown9tokenizer9Tokenizer7move_to17h66b6a45385cd3457E.llvm.15959340908883416241 (1 samples, 0.12%)</title><rect x="16.7687%" y="133" width="0.1224%" height="15" fill="rgb(245,182,24)" fg:x="137" fg:w="1"/><text x="17.0187%" y="143.50"></text></g><g><title>_ZN8markdown9tokenizer9Tokenizer8move_one17hcd0ac08812df918bE.llvm.15959340908883416241 (14 samples, 1.71%)</title><rect x="16.8911%" y="133" width="1.7136%" height="15" fill="rgb(242,14,37)" fg:x="138" fg:w="14"/><text x="17.1411%" y="143.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (14 samples, 1.71%)</title><rect x="18.6047%" y="133" width="1.7136%" height="15" fill="rgb(246,228,12)" fg:x="152" fg:w="14"/><text x="18.8547%" y="143.50"></text></g><g><title>markdown::state::call (2 samples, 0.24%)</title><rect x="20.0734%" y="117" width="0.2448%" height="15" fill="rgb(213,55,15)" fg:x="164" fg:w="2"/><text x="20.3234%" y="127.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="20.3182%" y="133" width="0.1224%" height="15" fill="rgb(209,9,3)" fg:x="166" fg:w="1"/><text x="20.5682%" y="143.50"></text></g><g><title>__rdl_realloc (1 samples, 0.12%)</title><rect x="20.4406%" y="133" width="0.1224%" height="15" fill="rgb(230,59,30)" fg:x="167" fg:w="1"/><text x="20.6906%" y="143.50"></text></g><g><title>aho_corasick::dfa::Builder::build (1 samples, 0.12%)</title><rect x="20.5630%" y="133" width="0.1224%" height="15" fill="rgb(209,121,21)" fg:x="168" fg:w="1"/><text x="20.8130%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.12%)</title><rect x="20.6854%" y="133" width="0.1224%" height="15" fill="rgb(220,109,13)" fg:x="169" fg:w="1"/><text x="20.9354%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="20.8078%" y="133" width="0.1224%" height="15" fill="rgb(232,18,1)" fg:x="170" fg:w="1"/><text x="21.0578%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;markdown::tokenizer::TokenizeState&gt; (2 samples, 0.24%)</title><rect x="20.9302%" y="133" width="0.2448%" height="15" fill="rgb(215,41,42)" fg:x="171" fg:w="2"/><text x="21.1802%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;markdown::tokenizer::Tokenizer&gt; (2 samples, 0.24%)</title><rect x="21.1750%" y="133" width="0.2448%" height="15" fill="rgb(224,123,36)" fg:x="173" fg:w="2"/><text x="21.4250%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.24%)</title><rect x="21.1750%" y="117" width="0.2448%" height="15" fill="rgb(240,125,3)" fg:x="173" fg:w="2"/><text x="21.4250%" y="127.50"></text></g><g><title>_int_free (2 samples, 0.24%)</title><rect x="21.1750%" y="101" width="0.2448%" height="15" fill="rgb(205,98,50)" fg:x="173" fg:w="2"/><text x="21.4250%" y="111.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.12%)</title><rect x="21.2974%" y="85" width="0.1224%" height="15" fill="rgb(205,185,37)" fg:x="174" fg:w="1"/><text x="21.5474%" y="95.50"></text></g><g><title>core::slice::memchr::memchr_aligned (17 samples, 2.08%)</title><rect x="21.4198%" y="133" width="2.0808%" height="15" fill="rgb(238,207,15)" fg:x="175" fg:w="17"/><text x="21.6698%" y="143.50">c..</text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (2 samples, 0.24%)</title><rect x="23.5006%" y="133" width="0.2448%" height="15" fill="rgb(213,199,42)" fg:x="192" fg:w="2"/><text x="23.7506%" y="143.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="23.6230%" y="117" width="0.1224%" height="15" fill="rgb(235,201,11)" fg:x="193" fg:w="1"/><text x="23.8730%" y="127.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::new (5 samples, 0.61%)</title><rect x="23.7454%" y="133" width="0.6120%" height="15" fill="rgb(207,46,11)" fg:x="194" fg:w="5"/><text x="23.9954%" y="143.50"></text></g><g><title>malloc (5 samples, 0.61%)</title><rect x="23.7454%" y="117" width="0.6120%" height="15" fill="rgb(241,35,35)" fg:x="194" fg:w="5"/><text x="23.9954%" y="127.50"></text></g><g><title>_int_malloc (3 samples, 0.37%)</title><rect x="23.9902%" y="101" width="0.3672%" height="15" fill="rgb(243,32,47)" fg:x="196" fg:w="3"/><text x="24.2402%" y="111.50"></text></g><g><title>malloc_consolidate (1 samples, 0.12%)</title><rect x="24.2350%" y="85" width="0.1224%" height="15" fill="rgb(247,202,23)" fg:x="198" fg:w="1"/><text x="24.4850%" y="95.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1 samples, 0.12%)</title><rect x="24.3574%" y="133" width="0.1224%" height="15" fill="rgb(219,102,11)" fg:x="199" fg:w="1"/><text x="24.6074%" y="143.50"></text></g><g><title>bytes::bytes::promotable_even_drop (1 samples, 0.12%)</title><rect x="24.6022%" y="101" width="0.1224%" height="15" fill="rgb(243,110,44)" fg:x="201" fg:w="1"/><text x="24.8522%" y="111.50"></text></g><g><title>hyper::proto::h1::role::encode_headers (3 samples, 0.37%)</title><rect x="24.4798%" y="133" width="0.3672%" height="15" fill="rgb(222,74,54)" fg:x="200" fg:w="3"/><text x="24.7298%" y="143.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (3 samples, 0.37%)</title><rect x="24.4798%" y="117" width="0.3672%" height="15" fill="rgb(216,99,12)" fg:x="200" fg:w="3"/><text x="24.7298%" y="127.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="24.7246%" y="101" width="0.1224%" height="15" fill="rgb(226,22,26)" fg:x="202" fg:w="1"/><text x="24.9746%" y="111.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="24.7246%" y="85" width="0.1224%" height="15" fill="rgb(217,163,10)" fg:x="202" fg:w="1"/><text x="24.9746%" y="95.50"></text></g><g><title>indexmap::map::core::entry::Entry&lt;K,V&gt;::or_insert (1 samples, 0.12%)</title><rect x="24.8470%" y="133" width="0.1224%" height="15" fill="rgb(213,25,53)" fg:x="203" fg:w="1"/><text x="25.0970%" y="143.50"></text></g><g><title>markdown::construct::content::chunk_inside (9 samples, 1.10%)</title><rect x="24.9694%" y="133" width="1.1016%" height="15" fill="rgb(252,105,26)" fg:x="204" fg:w="9"/><text x="25.2194%" y="143.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="26.5606%" y="85" width="0.1224%" height="15" fill="rgb(220,39,43)" fg:x="217" fg:w="1"/><text x="26.8106%" y="95.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (2 samples, 0.24%)</title><rect x="26.5606%" y="101" width="0.2448%" height="15" fill="rgb(229,68,48)" fg:x="217" fg:w="2"/><text x="26.8106%" y="111.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="26.6830%" y="85" width="0.1224%" height="15" fill="rgb(252,8,32)" fg:x="218" fg:w="1"/><text x="26.9330%" y="95.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="26.6830%" y="69" width="0.1224%" height="15" fill="rgb(223,20,43)" fg:x="218" fg:w="1"/><text x="26.9330%" y="79.50"></text></g><g><title>markdown::construct::document::flow_end (8 samples, 0.98%)</title><rect x="26.0710%" y="133" width="0.9792%" height="15" fill="rgb(229,81,49)" fg:x="213" fg:w="8"/><text x="26.3210%" y="143.50"></text></g><g><title>markdown::subtokenize::divide_events (6 samples, 0.73%)</title><rect x="26.3158%" y="117" width="0.7344%" height="15" fill="rgb(236,28,36)" fg:x="215" fg:w="6"/><text x="26.5658%" y="127.50"></text></g><g><title>malloc (2 samples, 0.24%)</title><rect x="26.8054%" y="101" width="0.2448%" height="15" fill="rgb(249,185,26)" fg:x="219" fg:w="2"/><text x="27.0554%" y="111.50"></text></g><g><title>_int_malloc (2 samples, 0.24%)</title><rect x="26.8054%" y="85" width="0.2448%" height="15" fill="rgb(249,174,33)" fg:x="219" fg:w="2"/><text x="27.0554%" y="95.50"></text></g><g><title>markdown::construct::document::flow_inside (11 samples, 1.35%)</title><rect x="27.0502%" y="133" width="1.3464%" height="15" fill="rgb(233,201,37)" fg:x="221" fg:w="11"/><text x="27.3002%" y="143.50"></text></g><g><title>_ZN8markdown9tokenizer9Tokenizer8move_one17hcd0ac08812df918bE.llvm.15959340908883416241 (1 samples, 0.12%)</title><rect x="28.2742%" y="117" width="0.1224%" height="15" fill="rgb(221,78,26)" fg:x="231" fg:w="1"/><text x="28.5242%" y="127.50"></text></g><g><title>markdown::construct::heading_setext::start (1 samples, 0.12%)</title><rect x="28.3966%" y="133" width="0.1224%" height="15" fill="rgb(250,127,30)" fg:x="232" fg:w="1"/><text x="28.6466%" y="143.50"></text></g><g><title>markdown::construct::paragraph::inside (1 samples, 0.12%)</title><rect x="28.5190%" y="133" width="0.1224%" height="15" fill="rgb(230,49,44)" fg:x="233" fg:w="1"/><text x="28.7690%" y="143.50"></text></g><g><title>markdown::construct::partial_data::at_break (1 samples, 0.12%)</title><rect x="28.6414%" y="133" width="0.1224%" height="15" fill="rgb(229,67,23)" fg:x="234" fg:w="1"/><text x="28.8914%" y="143.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (1 samples, 0.12%)</title><rect x="28.6414%" y="117" width="0.1224%" height="15" fill="rgb(249,83,47)" fg:x="234" fg:w="1"/><text x="28.8914%" y="127.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="28.6414%" y="101" width="0.1224%" height="15" fill="rgb(215,43,3)" fg:x="234" fg:w="1"/><text x="28.8914%" y="111.50"></text></g><g><title>markdown::construct::partial_data::inside (1 samples, 0.12%)</title><rect x="28.7638%" y="133" width="0.1224%" height="15" fill="rgb(238,154,13)" fg:x="235" fg:w="1"/><text x="29.0138%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="29.1310%" y="69" width="0.1224%" height="15" fill="rgb(219,56,2)" fg:x="238" fg:w="1"/><text x="29.3810%" y="79.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.12%)</title><rect x="29.2534%" y="69" width="0.1224%" height="15" fill="rgb(233,0,4)" fg:x="239" fg:w="1"/><text x="29.5034%" y="79.50"></text></g><g><title>_int_free_create_chunk (1 samples, 0.12%)</title><rect x="29.2534%" y="53" width="0.1224%" height="15" fill="rgb(235,30,7)" fg:x="239" fg:w="1"/><text x="29.5034%" y="63.50"></text></g><g><title>markdown::construct::partial_data::start (7 samples, 0.86%)</title><rect x="28.8862%" y="133" width="0.8568%" height="15" fill="rgb(250,79,13)" fg:x="236" fg:w="7"/><text x="29.1362%" y="143.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (7 samples, 0.86%)</title><rect x="28.8862%" y="117" width="0.8568%" height="15" fill="rgb(211,146,34)" fg:x="236" fg:w="7"/><text x="29.1362%" y="127.50"></text></g><g><title>realloc (7 samples, 0.86%)</title><rect x="28.8862%" y="101" width="0.8568%" height="15" fill="rgb(228,22,38)" fg:x="236" fg:w="7"/><text x="29.1362%" y="111.50"></text></g><g><title>_int_realloc (5 samples, 0.61%)</title><rect x="29.1310%" y="85" width="0.6120%" height="15" fill="rgb(235,168,5)" fg:x="238" fg:w="5"/><text x="29.3810%" y="95.50"></text></g><g><title>_int_malloc (3 samples, 0.37%)</title><rect x="29.3758%" y="69" width="0.3672%" height="15" fill="rgb(221,155,16)" fg:x="240" fg:w="3"/><text x="29.6258%" y="79.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="29.6206%" y="53" width="0.1224%" height="15" fill="rgb(215,215,53)" fg:x="242" fg:w="1"/><text x="29.8706%" y="63.50"></text></g><g><title>markdown::construct::text::before (1 samples, 0.12%)</title><rect x="29.7430%" y="133" width="0.1224%" height="15" fill="rgb(223,4,10)" fg:x="243" fg:w="1"/><text x="29.9930%" y="143.50"></text></g><g><title>markdown::resolve::call (1 samples, 0.12%)</title><rect x="29.8654%" y="133" width="0.1224%" height="15" fill="rgb(234,103,6)" fg:x="244" fg:w="1"/><text x="30.1154%" y="143.50"></text></g><g><title>markdown::subtokenize::subtokenize (4 samples, 0.49%)</title><rect x="29.9878%" y="133" width="0.4896%" height="15" fill="rgb(227,97,0)" fg:x="245" fg:w="4"/><text x="30.2378%" y="143.50"></text></g><g><title>markdown::construct::paragraph::inside (4 samples, 0.49%)</title><rect x="29.9878%" y="117" width="0.4896%" height="15" fill="rgb(234,150,53)" fg:x="245" fg:w="4"/><text x="30.2378%" y="127.50"></text></g><g><title>markdown::to_html::compile (1 samples, 0.12%)</title><rect x="30.4774%" y="133" width="0.1224%" height="15" fill="rgb(228,201,54)" fg:x="249" fg:w="1"/><text x="30.7274%" y="143.50"></text></g><g><title>markdown::to_html::on_exit_heading_atx_text (1 samples, 0.12%)</title><rect x="30.5998%" y="133" width="0.1224%" height="15" fill="rgb(222,22,37)" fg:x="250" fg:w="1"/><text x="30.8498%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="30.5998%" y="117" width="0.1224%" height="15" fill="rgb(237,53,32)" fg:x="250" fg:w="1"/><text x="30.8498%" y="127.50"></text></g><g><title>markdown::tokenizer::Tokenizer::attempt (12 samples, 1.47%)</title><rect x="30.7222%" y="133" width="1.4688%" height="15" fill="rgb(233,25,53)" fg:x="251" fg:w="12"/><text x="30.9722%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.86%)</title><rect x="31.3341%" y="117" width="0.8568%" height="15" fill="rgb(210,40,34)" fg:x="256" fg:w="7"/><text x="31.5841%" y="127.50"></text></g><g><title>markdown::tokenizer::Tokenizer::exit (1 samples, 0.12%)</title><rect x="32.1909%" y="133" width="0.1224%" height="15" fill="rgb(241,220,44)" fg:x="263" fg:w="1"/><text x="32.4409%" y="143.50"></text></g><g><title>markdown::tokenizer::Tokenizer::flush (1 samples, 0.12%)</title><rect x="32.3133%" y="133" width="0.1224%" height="15" fill="rgb(235,28,35)" fg:x="264" fg:w="1"/><text x="32.5633%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="32.9253%" y="117" width="0.1224%" height="15" fill="rgb(210,56,17)" fg:x="269" fg:w="1"/><text x="33.1753%" y="127.50"></text></g><g><title>markdown::util::edit_map::EditMap::consume (9 samples, 1.10%)</title><rect x="32.4357%" y="133" width="1.1016%" height="15" fill="rgb(224,130,29)" fg:x="265" fg:w="9"/><text x="32.6857%" y="143.50"></text></g><g><title>malloc (4 samples, 0.49%)</title><rect x="33.0477%" y="117" width="0.4896%" height="15" fill="rgb(235,212,8)" fg:x="270" fg:w="4"/><text x="33.2977%" y="127.50"></text></g><g><title>_int_malloc (3 samples, 0.37%)</title><rect x="33.1701%" y="101" width="0.3672%" height="15" fill="rgb(223,33,50)" fg:x="271" fg:w="3"/><text x="33.4201%" y="111.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="33.4149%" y="85" width="0.1224%" height="15" fill="rgb(219,149,13)" fg:x="273" fg:w="1"/><text x="33.6649%" y="95.50"></text></g><g><title>_int_free (2 samples, 0.24%)</title><rect x="33.6597%" y="117" width="0.2448%" height="15" fill="rgb(250,156,29)" fg:x="275" fg:w="2"/><text x="33.9097%" y="127.50"></text></g><g><title>_int_free_merge_chunk (2 samples, 0.24%)</title><rect x="33.6597%" y="101" width="0.2448%" height="15" fill="rgb(216,193,19)" fg:x="275" fg:w="2"/><text x="33.9097%" y="111.50"></text></g><g><title>_int_free_create_chunk (2 samples, 0.24%)</title><rect x="33.6597%" y="85" width="0.2448%" height="15" fill="rgb(216,135,14)" fg:x="275" fg:w="2"/><text x="33.9097%" y="95.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.24%)</title><rect x="33.6597%" y="69" width="0.2448%" height="15" fill="rgb(241,47,5)" fg:x="275" fg:w="2"/><text x="33.9097%" y="79.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2 samples, 0.24%)</title><rect x="33.6597%" y="53" width="0.2448%" height="15" fill="rgb(233,42,35)" fg:x="275" fg:w="2"/><text x="33.9097%" y="63.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.12%)</title><rect x="33.7821%" y="37" width="0.1224%" height="15" fill="rgb(231,13,6)" fg:x="276" fg:w="1"/><text x="34.0321%" y="47.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (21 samples, 2.57%)</title><rect x="33.5373%" y="133" width="2.5704%" height="15" fill="rgb(207,181,40)" fg:x="274" fg:w="21"/><text x="33.7873%" y="143.50">mi..</text></g><g><title>epoll_wait (18 samples, 2.20%)</title><rect x="33.9045%" y="117" width="2.2032%" height="15" fill="rgb(254,173,49)" fg:x="277" fg:w="18"/><text x="34.1545%" y="127.50">e..</text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.12%)</title><rect x="35.9853%" y="101" width="0.1224%" height="15" fill="rgb(221,1,38)" fg:x="294" fg:w="1"/><text x="36.2353%" y="111.50"></text></g><g><title>myweb::page::into_info::monomorphized_function::_{{closure}} (1 samples, 0.12%)</title><rect x="36.1077%" y="133" width="0.1224%" height="15" fill="rgb(206,124,46)" fg:x="295" fg:w="1"/><text x="36.3577%" y="143.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="36.1077%" y="117" width="0.1224%" height="15" fill="rgb(249,21,11)" fg:x="295" fg:w="1"/><text x="36.3577%" y="127.50"></text></g><g><title>myweb::post::Markdown::to_html (1 samples, 0.12%)</title><rect x="36.2301%" y="133" width="0.1224%" height="15" fill="rgb(222,201,40)" fg:x="296" fg:w="1"/><text x="36.4801%" y="143.50"></text></g><g><title>percent_encoding::PercentDecode::decode_utf8_lossy (1 samples, 0.12%)</title><rect x="36.3525%" y="133" width="0.1224%" height="15" fill="rgb(235,61,29)" fg:x="297" fg:w="1"/><text x="36.6025%" y="143.50"></text></g><g><title>std::fs::read_to_string::inner (1 samples, 0.12%)</title><rect x="36.4749%" y="133" width="0.1224%" height="15" fill="rgb(219,207,3)" fg:x="298" fg:w="1"/><text x="36.7249%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="36.4749%" y="117" width="0.1224%" height="15" fill="rgb(222,56,46)" fg:x="298" fg:w="1"/><text x="36.7249%" y="127.50"></text></g><g><title>std::io::stdio::set_output_capture (1 samples, 0.12%)</title><rect x="36.5973%" y="133" width="0.1224%" height="15" fill="rgb(239,76,54)" fg:x="299" fg:w="1"/><text x="36.8473%" y="143.50"></text></g><g><title>std::sys::pal::unix::thread::guard::current (1 samples, 0.12%)</title><rect x="36.7197%" y="133" width="0.1224%" height="15" fill="rgb(231,124,27)" fg:x="300" fg:w="1"/><text x="36.9697%" y="143.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.12%)</title><rect x="36.7197%" y="117" width="0.1224%" height="15" fill="rgb(249,195,6)" fg:x="300" fg:w="1"/><text x="36.9697%" y="127.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1 samples, 0.12%)</title><rect x="36.8421%" y="133" width="0.1224%" height="15" fill="rgb(237,174,47)" fg:x="301" fg:w="1"/><text x="37.0921%" y="143.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.12%)</title><rect x="36.8421%" y="117" width="0.1224%" height="15" fill="rgb(206,201,31)" fg:x="301" fg:w="1"/><text x="37.0921%" y="127.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.12%)</title><rect x="36.8421%" y="101" width="0.1224%" height="15" fill="rgb(231,57,52)" fg:x="301" fg:w="1"/><text x="37.0921%" y="111.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1 samples, 0.12%)</title><rect x="36.9645%" y="133" width="0.1224%" height="15" fill="rgb(248,177,22)" fg:x="302" fg:w="1"/><text x="37.2145%" y="143.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (5 samples, 0.61%)</title><rect x="37.0869%" y="133" width="0.6120%" height="15" fill="rgb(215,211,37)" fg:x="303" fg:w="5"/><text x="37.3369%" y="143.50"></text></g><g><title>tokio::runtime::context::set_scheduler (5 samples, 0.61%)</title><rect x="37.0869%" y="117" width="0.6120%" height="15" fill="rgb(241,128,51)" fg:x="303" fg:w="5"/><text x="37.3369%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5 samples, 0.61%)</title><rect x="37.0869%" y="101" width="0.6120%" height="15" fill="rgb(227,165,31)" fg:x="303" fg:w="5"/><text x="37.3369%" y="111.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 0.24%)</title><rect x="37.6989%" y="133" width="0.2448%" height="15" fill="rgb(228,167,24)" fg:x="308" fg:w="2"/><text x="37.9489%" y="143.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.12%)</title><rect x="37.9437%" y="133" width="0.1224%" height="15" fill="rgb(228,143,12)" fg:x="310" fg:w="1"/><text x="38.1937%" y="143.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (1 samples, 0.12%)</title><rect x="38.0661%" y="133" width="0.1224%" height="15" fill="rgb(249,149,8)" fg:x="311" fg:w="1"/><text x="38.3161%" y="143.50"></text></g><g><title>[unknown] (214 samples, 26.19%)</title><rect x="12.1175%" y="149" width="26.1934%" height="15" fill="rgb(243,35,44)" fg:x="99" fg:w="214"/><text x="12.3675%" y="159.50">[unknown]</text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.12%)</title><rect x="38.1885%" y="133" width="0.1224%" height="15" fill="rgb(246,89,9)" fg:x="312" fg:w="1"/><text x="38.4385%" y="143.50"></text></g><g><title>_ZN126_$LT$hyper..proto..h1..dispatch..Server$LT$S$C$hyper..body..body..Body$GT$$u20$as$u20$hyper..proto..h1..dispatch..Dispatch$GT$8recv_msg17h44fb63b47bfcd2caE.llvm.7481067798590672222 (1 samples, 0.12%)</title><rect x="38.3109%" y="149" width="0.1224%" height="15" fill="rgb(233,213,13)" fg:x="313" fg:w="1"/><text x="38.5609%" y="159.50"></text></g><g><title>_ZN15futures_channel4mpsc27BoundedSenderInner$LT$T$GT$13poll_unparked17h21a792311bd0a720E.llvm.4337790255128867133 (1 samples, 0.12%)</title><rect x="38.4333%" y="149" width="0.1224%" height="15" fill="rgb(233,141,41)" fg:x="314" fg:w="1"/><text x="38.6833%" y="159.50"></text></g><g><title>_ZN4core3ptr43drop_in_place$LT$markdown..state..State$GT$17h5bbe46dfc0ea8f92E.llvm.15959340908883416241 (8 samples, 0.98%)</title><rect x="38.5557%" y="149" width="0.9792%" height="15" fill="rgb(239,167,4)" fg:x="315" fg:w="8"/><text x="38.8057%" y="159.50"></text></g><g><title>_ZN4core3ptr44drop_in_place$LT$hyper..body..body..Body$GT$17h2993193c74c820e1E.llvm.10703699227954456012 (1 samples, 0.12%)</title><rect x="39.5349%" y="149" width="0.1224%" height="15" fill="rgb(209,217,16)" fg:x="323" fg:w="1"/><text x="39.7849%" y="159.50"></text></g><g><title>_ZN4core3ptr49drop_in_place$LT$http..header..map..HeaderMap$GT$17h7c29a0db728e2b8dE.llvm.7481067798590672222 (1 samples, 0.12%)</title><rect x="39.6573%" y="149" width="0.1224%" height="15" fill="rgb(219,88,35)" fg:x="324" fg:w="1"/><text x="39.9073%" y="159.50"></text></g><g><title>_ZN4core3ptr50drop_in_place$LT$rocket..response..body..Inner$GT$17he54123a19b5be371E.llvm.6540594638753738161 (1 samples, 0.12%)</title><rect x="39.7797%" y="149" width="0.1224%" height="15" fill="rgb(220,193,23)" fg:x="325" fg:w="1"/><text x="40.0297%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.24%)</title><rect x="39.9021%" y="133" width="0.2448%" height="15" fill="rgb(230,90,52)" fg:x="326" fg:w="2"/><text x="40.1521%" y="143.50"></text></g><g><title>_int_free (2 samples, 0.24%)</title><rect x="39.9021%" y="117" width="0.2448%" height="15" fill="rgb(252,106,19)" fg:x="326" fg:w="2"/><text x="40.1521%" y="127.50"></text></g><g><title>_ZN4core3ptr832drop_in_place$LT$tokio..runtime..task..core..Stage$LT$hyper..server..server..new_svc..NewSvcTask$LT$rocket..ext..CancellableIo$LT$rocket..shutdown..Shutdown$C$tokio..net..tcp..stream..TcpStream$GT$$C$rocket..server..$LT$impl$u20$rocket..rkt..Rocket$LT$rocket..phase..Orbit$GT$$GT$..http_server$LT$tokio..net..tcp..listener..TcpListener$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$hyper..service..util..ServiceFn$LT$rocket..server..$LT$impl$u20$rocket..rkt..Rocket$LT$rocket..phase..Orbit$GT$$GT$..http_server$LT$tokio..net..tcp..listener..TcpListener$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$hyper..body..body..Body$GT$$C$hyper..common..exec..Exec$C$hyper..server..shutdown..GracefulWatcher$GT$$GT$$GT$17h53a14681d53c6a41E.llvm.10703699227954456012 (4 samples, 0.49%)</title><rect x="39.9021%" y="149" width="0.4896%" height="15" fill="rgb(206,74,20)" fg:x="326" fg:w="4"/><text x="40.1521%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::dispatch::Server&lt;hyper::service::util::ServiceFn&lt;rocket::server::&lt;impl rocket::rkt::Rocket&lt;rocket::phase::Orbit&gt;&gt;::http_server&lt;tokio::net::tcp::listener::TcpListener&gt;::{{closure}}::{{closure}}::{{closure}}::{{closure}},hyper::body::body::Body&gt;,hyper::body::body::Body&gt;&gt; (2 samples, 0.24%)</title><rect x="40.1469%" y="133" width="0.2448%" height="15" fill="rgb(230,138,44)" fg:x="328" fg:w="2"/><text x="40.3969%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="40.2693%" y="117" width="0.1224%" height="15" fill="rgb(235,182,43)" fg:x="329" fg:w="1"/><text x="40.5193%" y="127.50"></text></g><g><title>_ZN4core5slice4sort7recurse17h4054a5b6de48c9c1E.llvm.6085742288960035480 (1 samples, 0.12%)</title><rect x="40.3917%" y="149" width="0.1224%" height="15" fill="rgb(242,16,51)" fg:x="330" fg:w="1"/><text x="40.6417%" y="159.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="40.6365%" y="133" width="0.1224%" height="15" fill="rgb(248,9,4)" fg:x="332" fg:w="1"/><text x="40.8865%" y="143.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (3 samples, 0.37%)</title><rect x="40.5141%" y="149" width="0.3672%" height="15" fill="rgb(210,31,22)" fg:x="331" fg:w="3"/><text x="40.7641%" y="159.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="40.7589%" y="133" width="0.1224%" height="15" fill="rgb(239,54,39)" fg:x="333" fg:w="1"/><text x="41.0089%" y="143.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="40.7589%" y="117" width="0.1224%" height="15" fill="rgb(230,99,41)" fg:x="333" fg:w="1"/><text x="41.0089%" y="127.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="40.7589%" y="101" width="0.1224%" height="15" fill="rgb(253,106,12)" fg:x="333" fg:w="1"/><text x="41.0089%" y="111.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h8f2a2bd33aa358fcE.llvm.15206427685319605357 (2 samples, 0.24%)</title><rect x="40.8813%" y="149" width="0.2448%" height="15" fill="rgb(213,46,41)" fg:x="334" fg:w="2"/><text x="41.1313%" y="159.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::fallible_with_capacity (1 samples, 0.12%)</title><rect x="41.0037%" y="133" width="0.1224%" height="15" fill="rgb(215,133,35)" fg:x="335" fg:w="1"/><text x="41.2537%" y="143.50"></text></g><g><title>rocket::router::router::Router::route (1 samples, 0.12%)</title><rect x="41.0037%" y="117" width="0.1224%" height="15" fill="rgb(213,28,5)" fg:x="335" fg:w="1"/><text x="41.2537%" y="127.50"></text></g><g><title>_ZN5bytes5bytes11static_drop17h343a99ddcfc9c9ffE.llvm.13018582765189766818 (1 samples, 0.12%)</title><rect x="41.1261%" y="149" width="0.1224%" height="15" fill="rgb(215,77,49)" fg:x="336" fg:w="1"/><text x="41.3761%" y="159.50"></text></g><g><title>_ZN5hyper5proto2h18dispatch32Dispatcher$LT$D$C$Bs$C$I$C$T$GT$10poll_inner17hcfd347e6d6de922aE.llvm.7481067798590672222 (2 samples, 0.24%)</title><rect x="41.2485%" y="149" width="0.2448%" height="15" fill="rgb(248,100,22)" fg:x="337" fg:w="2"/><text x="41.4985%" y="159.50"></text></g><g><title>_ZN5hyper6common5drain5Watch5watch28_$u7b$$u7b$closure$u7d$$u7d$17h2769c61c8f2905deE.llvm.15032919299783120568 (2 samples, 0.24%)</title><rect x="41.4933%" y="149" width="0.2448%" height="15" fill="rgb(208,67,9)" fg:x="339" fg:w="2"/><text x="41.7433%" y="159.50"></text></g><g><title>_ZN5tokio7runtime4park4wake17h8601ec3b9f00f618E.llvm.7208759215308309114 (2 samples, 0.24%)</title><rect x="41.7381%" y="149" width="0.2448%" height="15" fill="rgb(219,133,21)" fg:x="341" fg:w="2"/><text x="41.9881%" y="159.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17ha1188ea10922d572E.llvm.15032919299783120568 (3 samples, 0.37%)</title><rect x="41.9829%" y="149" width="0.3672%" height="15" fill="rgb(246,46,29)" fg:x="343" fg:w="3"/><text x="42.2329%" y="159.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.12%)</title><rect x="42.2277%" y="133" width="0.1224%" height="15" fill="rgb(246,185,52)" fg:x="345" fg:w="1"/><text x="42.4777%" y="143.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17hc5ab027b85db1decE.llvm.15032919299783120568 (1 samples, 0.12%)</title><rect x="42.3501%" y="149" width="0.1224%" height="15" fill="rgb(252,136,11)" fg:x="346" fg:w="1"/><text x="42.6001%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="42.3501%" y="133" width="0.1224%" height="15" fill="rgb(219,138,53)" fg:x="346" fg:w="1"/><text x="42.6001%" y="143.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17hd6d34dc8e8ae4b4aE.llvm.15032919299783120568 (1 samples, 0.12%)</title><rect x="42.4725%" y="149" width="0.1224%" height="15" fill="rgb(211,51,23)" fg:x="347" fg:w="1"/><text x="42.7225%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::release (1 samples, 0.12%)</title><rect x="42.4725%" y="133" width="0.1224%" height="15" fill="rgb(247,221,28)" fg:x="347" fg:w="1"/><text x="42.7225%" y="143.50"></text></g><g><title>_ZN5tokio7runtime4time54_$LT$impl$u20$tokio..runtime..time..handle..Handle$GT$15process_at_time28_$u7b$$u7b$closure$u7d$$u7d$17h8ad111a431310b49E.llvm.2330631672319492856 (1 samples, 0.12%)</title><rect x="42.5949%" y="149" width="0.1224%" height="15" fill="rgb(251,222,45)" fg:x="348" fg:w="1"/><text x="42.8449%" y="159.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h7cd01cabee279f26E.llvm.6378141110824074303 (1 samples, 0.12%)</title><rect x="42.5949%" y="133" width="0.1224%" height="15" fill="rgb(217,162,53)" fg:x="348" fg:w="1"/><text x="42.8449%" y="143.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.12%)</title><rect x="42.5949%" y="117" width="0.1224%" height="15" fill="rgb(229,93,14)" fg:x="348" fg:w="1"/><text x="42.8449%" y="127.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h36c34ef83d4e25dbE.llvm.2330631672319492856 (2 samples, 0.24%)</title><rect x="42.7173%" y="149" width="0.2448%" height="15" fill="rgb(209,67,49)" fg:x="349" fg:w="2"/><text x="42.9673%" y="159.50"></text></g><g><title>_ZN63_$LT$markdown..state..State$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf6424046d02ca269E.llvm.15959340908883416241 (3 samples, 0.37%)</title><rect x="42.9621%" y="149" width="0.3672%" height="15" fill="rgb(213,87,29)" fg:x="351" fg:w="3"/><text x="43.2121%" y="159.50"></text></g><g><title>_ZN6rocket6server16hyper_service_fn28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9d2b75e04edf9049E.llvm.10703699227954456012 (1 samples, 0.12%)</title><rect x="43.3293%" y="149" width="0.1224%" height="15" fill="rgb(205,151,52)" fg:x="354" fg:w="1"/><text x="43.5793%" y="159.50"></text></g><g><title>_ZN8markdown4util8edit_map8add_impl17hd847070d31e2a739E.llvm.10290876995378636627 (1 samples, 0.12%)</title><rect x="43.4517%" y="149" width="0.1224%" height="15" fill="rgb(253,215,39)" fg:x="355" fg:w="1"/><text x="43.7017%" y="159.50"></text></g><g><title>_ZN8markdown9tokenizer10enter_impl17h3c2178787398ee60E.llvm.15959340908883416241 (3 samples, 0.37%)</title><rect x="43.5741%" y="149" width="0.3672%" height="15" fill="rgb(221,220,41)" fg:x="356" fg:w="3"/><text x="43.8241%" y="159.50"></text></g><g><title>_ZN8markdown9tokenizer9Tokenizer8move_one17hcd0ac08812df918bE.llvm.15959340908883416241 (12 samples, 1.47%)</title><rect x="43.9412%" y="149" width="1.4688%" height="15" fill="rgb(218,133,21)" fg:x="359" fg:w="12"/><text x="44.1912%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.24%)</title><rect x="58.1395%" y="133" width="0.2448%" height="15" fill="rgb(221,193,43)" fg:x="475" fg:w="2"/><text x="58.3895%" y="143.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (113 samples, 13.83%)</title><rect x="45.4100%" y="149" width="13.8311%" height="15" fill="rgb(240,128,52)" fg:x="371" fg:w="113"/><text x="45.6600%" y="159.50">_ZN8markdown9tokenize..</text></g><g><title>markdown::state::call (7 samples, 0.86%)</title><rect x="58.3843%" y="133" width="0.8568%" height="15" fill="rgb(253,114,12)" fg:x="477" fg:w="7"/><text x="58.6343%" y="143.50"></text></g><g><title>_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc89de5340e8c7f29E.llvm.17752379547534570737 (1 samples, 0.12%)</title><rect x="59.2411%" y="149" width="0.1224%" height="15" fill="rgb(215,223,47)" fg:x="484" fg:w="1"/><text x="59.4911%" y="159.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="59.4859%" y="133" width="0.1224%" height="15" fill="rgb(248,225,23)" fg:x="486" fg:w="1"/><text x="59.7359%" y="143.50"></text></g><g><title>_ZN96_$LT$stable_pattern..split..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hfb278aa622a27be1E.llvm.10327475444766030947 (3 samples, 0.37%)</title><rect x="59.3635%" y="149" width="0.3672%" height="15" fill="rgb(250,108,0)" fg:x="485" fg:w="3"/><text x="59.6135%" y="159.50"></text></g><g><title>memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (1 samples, 0.12%)</title><rect x="59.6083%" y="133" width="0.1224%" height="15" fill="rgb(228,208,7)" fg:x="487" fg:w="1"/><text x="59.8583%" y="143.50"></text></g><g><title>__floattidf (1 samples, 0.12%)</title><rect x="59.7307%" y="149" width="0.1224%" height="15" fill="rgb(244,45,10)" fg:x="488" fg:w="1"/><text x="59.9807%" y="159.50"></text></g><g><title>__rdl_alloc (2 samples, 0.24%)</title><rect x="59.8531%" y="149" width="0.2448%" height="15" fill="rgb(207,125,25)" fg:x="489" fg:w="2"/><text x="60.1031%" y="159.50"></text></g><g><title>__rust_dealloc (2 samples, 0.24%)</title><rect x="60.0979%" y="149" width="0.2448%" height="15" fill="rgb(210,195,18)" fg:x="491" fg:w="2"/><text x="60.3479%" y="159.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="60.3427%" y="149" width="0.1224%" height="15" fill="rgb(249,80,12)" fg:x="493" fg:w="1"/><text x="60.5927%" y="159.50"></text></g><g><title>_int_free_create_chunk (3 samples, 0.37%)</title><rect x="60.4651%" y="149" width="0.3672%" height="15" fill="rgb(221,65,9)" fg:x="494" fg:w="3"/><text x="60.7151%" y="159.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (3 samples, 0.37%)</title><rect x="60.4651%" y="133" width="0.3672%" height="15" fill="rgb(235,49,36)" fg:x="494" fg:w="3"/><text x="60.7151%" y="143.50"></text></g><g><title>_int_realloc (5 samples, 0.61%)</title><rect x="60.8323%" y="149" width="0.6120%" height="15" fill="rgb(225,32,20)" fg:x="497" fg:w="5"/><text x="61.0823%" y="159.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (5 samples, 0.61%)</title><rect x="60.8323%" y="133" width="0.6120%" height="15" fill="rgb(215,141,46)" fg:x="497" fg:w="5"/><text x="61.0823%" y="143.50"></text></g><g><title>aho_corasick::ahocorasick::AhoCorasick&lt;S&gt;::replace_all_bytes (1 samples, 0.12%)</title><rect x="61.4443%" y="149" width="0.1224%" height="15" fill="rgb(250,160,47)" fg:x="502" fg:w="1"/><text x="61.6943%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.37%)</title><rect x="61.5667%" y="149" width="0.3672%" height="15" fill="rgb(216,222,40)" fg:x="503" fg:w="3"/><text x="61.8167%" y="159.50"></text></g><g><title>malloc (2 samples, 0.24%)</title><rect x="61.6891%" y="133" width="0.2448%" height="15" fill="rgb(234,217,39)" fg:x="504" fg:w="2"/><text x="61.9391%" y="143.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.12%)</title><rect x="61.9339%" y="149" width="0.1224%" height="15" fill="rgb(207,178,40)" fg:x="506" fg:w="1"/><text x="62.1839%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.37%)</title><rect x="62.0563%" y="149" width="0.3672%" height="15" fill="rgb(221,136,13)" fg:x="507" fg:w="3"/><text x="62.3063%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hb35ded40ab8d7f1fE.llvm.3096208834662475516 (2 samples, 0.24%)</title><rect x="62.1787%" y="133" width="0.2448%" height="15" fill="rgb(249,199,10)" fg:x="508" fg:w="2"/><text x="62.4287%" y="143.50"></text></g><g><title>malloc (2 samples, 0.24%)</title><rect x="62.1787%" y="117" width="0.2448%" height="15" fill="rgb(249,222,13)" fg:x="508" fg:w="2"/><text x="62.4287%" y="127.50"></text></g><g><title>_int_malloc (2 samples, 0.24%)</title><rect x="62.1787%" y="101" width="0.2448%" height="15" fill="rgb(244,185,38)" fg:x="508" fg:w="2"/><text x="62.4287%" y="111.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="62.3011%" y="85" width="0.1224%" height="15" fill="rgb(236,202,9)" fg:x="509" fg:w="1"/><text x="62.5511%" y="95.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.12%)</title><rect x="62.4235%" y="149" width="0.1224%" height="15" fill="rgb(250,229,37)" fg:x="510" fg:w="1"/><text x="62.6735%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="62.5459%" y="133" width="0.1224%" height="15" fill="rgb(206,174,23)" fg:x="511" fg:w="1"/><text x="62.7959%" y="143.50"></text></g><g><title>anon.3917ca4de67884d15d3c520b33ecc756.184.llvm.6540594638753738161 (2 samples, 0.24%)</title><rect x="62.5459%" y="149" width="0.2448%" height="15" fill="rgb(211,33,43)" fg:x="511" fg:w="2"/><text x="62.7959%" y="159.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (1 samples, 0.12%)</title><rect x="62.6683%" y="133" width="0.1224%" height="15" fill="rgb(245,58,50)" fg:x="512" fg:w="1"/><text x="62.9183%" y="143.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.12%)</title><rect x="62.7907%" y="149" width="0.1224%" height="15" fill="rgb(244,68,36)" fg:x="513" fg:w="1"/><text x="63.0407%" y="159.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (1 samples, 0.12%)</title><rect x="62.9131%" y="149" width="0.1224%" height="15" fill="rgb(232,229,15)" fg:x="514" fg:w="1"/><text x="63.1631%" y="159.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1 samples, 0.12%)</title><rect x="63.0355%" y="149" width="0.1224%" height="15" fill="rgb(254,30,23)" fg:x="515" fg:w="1"/><text x="63.2855%" y="159.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="63.0355%" y="133" width="0.1224%" height="15" fill="rgb(235,160,14)" fg:x="515" fg:w="1"/><text x="63.2855%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="63.1579%" y="149" width="0.1224%" height="15" fill="rgb(212,155,44)" fg:x="516" fg:w="1"/><text x="63.4079%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::ext::HeaderCaseMap&gt; (1 samples, 0.12%)</title><rect x="63.2803%" y="149" width="0.1224%" height="15" fill="rgb(226,2,50)" fg:x="517" fg:w="1"/><text x="63.5303%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;markdown::tokenizer::TokenizeState&gt; (1 samples, 0.12%)</title><rect x="63.4027%" y="149" width="0.1224%" height="15" fill="rgb(234,177,6)" fg:x="518" fg:w="1"/><text x="63.6527%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;rocket::ext::CancellableIo&lt;rocket::shutdown::Shutdown,tokio::net::tcp::stream::TcpStream&gt;&gt; (2 samples, 0.24%)</title><rect x="63.5251%" y="149" width="0.2448%" height="15" fill="rgb(217,24,9)" fg:x="519" fg:w="2"/><text x="63.7751%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::io::registration::Registration&gt; (1 samples, 0.12%)</title><rect x="63.6475%" y="133" width="0.1224%" height="15" fill="rgb(220,13,46)" fg:x="520" fg:w="1"/><text x="63.8975%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;rocket::response::body::Body&gt; (1 samples, 0.12%)</title><rect x="63.7699%" y="149" width="0.1224%" height="15" fill="rgb(239,221,27)" fg:x="521" fg:w="1"/><text x="64.0199%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;rocket::response::response::Response&gt; (1 samples, 0.12%)</title><rect x="63.8923%" y="149" width="0.1224%" height="15" fill="rgb(222,198,25)" fg:x="522" fg:w="1"/><text x="64.1423%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="63.8923%" y="133" width="0.1224%" height="15" fill="rgb(211,99,13)" fg:x="522" fg:w="1"/><text x="64.1423%" y="143.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="63.8923%" y="117" width="0.1224%" height="15" fill="rgb(232,111,31)" fg:x="522" fg:w="1"/><text x="64.1423%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;rocket::trip_wire::TripWire&gt; (1 samples, 0.12%)</title><rect x="64.0147%" y="149" width="0.1224%" height="15" fill="rgb(245,82,37)" fg:x="523" fg:w="1"/><text x="64.2647%" y="159.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.12%)</title><rect x="64.1371%" y="149" width="0.1224%" height="15" fill="rgb(227,149,46)" fg:x="524" fg:w="1"/><text x="64.3871%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.12%)</title><rect x="64.2595%" y="149" width="0.1224%" height="15" fill="rgb(218,36,50)" fg:x="525" fg:w="1"/><text x="64.5095%" y="159.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (1 samples, 0.12%)</title><rect x="64.3819%" y="149" width="0.1224%" height="15" fill="rgb(226,80,48)" fg:x="526" fg:w="1"/><text x="64.6319%" y="159.50"></text></g><g><title>futures_channel::mpsc::channel (1 samples, 0.12%)</title><rect x="64.5043%" y="149" width="0.1224%" height="15" fill="rgb(238,224,15)" fg:x="527" fg:w="1"/><text x="64.7543%" y="159.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (3 samples, 0.37%)</title><rect x="64.6267%" y="149" width="0.3672%" height="15" fill="rgb(241,136,10)" fg:x="528" fg:w="3"/><text x="64.8767%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2 samples, 0.24%)</title><rect x="64.7491%" y="133" width="0.2448%" height="15" fill="rgb(208,32,45)" fg:x="529" fg:w="2"/><text x="64.9991%" y="143.50"></text></g><g><title>_int_free (2 samples, 0.24%)</title><rect x="64.7491%" y="117" width="0.2448%" height="15" fill="rgb(207,135,9)" fg:x="529" fg:w="2"/><text x="64.9991%" y="127.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.12%)</title><rect x="64.9939%" y="149" width="0.1224%" height="15" fill="rgb(206,86,44)" fg:x="531" fg:w="1"/><text x="65.2439%" y="159.50"></text></g><g><title>http::extensions::Extensions::insert (1 samples, 0.12%)</title><rect x="65.1163%" y="149" width="0.1224%" height="15" fill="rgb(245,177,15)" fg:x="532" fg:w="1"/><text x="65.3663%" y="159.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::try_reserve (1 samples, 0.12%)</title><rect x="65.2387%" y="149" width="0.1224%" height="15" fill="rgb(206,64,50)" fg:x="533" fg:w="1"/><text x="65.4887%" y="159.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="65.2387%" y="133" width="0.1224%" height="15" fill="rgb(234,36,40)" fg:x="533" fg:w="1"/><text x="65.4887%" y="143.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.12%)</title><rect x="65.3611%" y="149" width="0.1224%" height="15" fill="rgb(213,64,8)" fg:x="534" fg:w="1"/><text x="65.6111%" y="159.50"></text></g><g><title>http::header::name::StandardHeader::from_bytes (3 samples, 0.37%)</title><rect x="65.4835%" y="149" width="0.3672%" height="15" fill="rgb(210,75,36)" fg:x="535" fg:w="3"/><text x="65.7335%" y="159.50"></text></g><g><title>http::response::Builder::header (3 samples, 0.37%)</title><rect x="65.8507%" y="149" width="0.3672%" height="15" fill="rgb(229,88,21)" fg:x="538" fg:w="3"/><text x="66.1007%" y="159.50"></text></g><g><title>http::uri::Uri::from_shared (1 samples, 0.12%)</title><rect x="66.2179%" y="149" width="0.1224%" height="15" fill="rgb(252,204,47)" fg:x="541" fg:w="1"/><text x="66.4679%" y="159.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (2 samples, 0.24%)</title><rect x="66.3403%" y="149" width="0.2448%" height="15" fill="rgb(208,77,27)" fg:x="542" fg:w="2"/><text x="66.5903%" y="159.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (1 samples, 0.12%)</title><rect x="66.5851%" y="149" width="0.1224%" height="15" fill="rgb(221,76,26)" fg:x="544" fg:w="1"/><text x="66.8351%" y="159.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1 samples, 0.12%)</title><rect x="66.7075%" y="149" width="0.1224%" height="15" fill="rgb(225,139,18)" fg:x="545" fg:w="1"/><text x="66.9575%" y="159.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (4 samples, 0.49%)</title><rect x="66.8299%" y="149" width="0.4896%" height="15" fill="rgb(230,137,11)" fg:x="546" fg:w="4"/><text x="67.0799%" y="159.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (4 samples, 0.49%)</title><rect x="67.3195%" y="149" width="0.4896%" height="15" fill="rgb(212,28,1)" fg:x="550" fg:w="4"/><text x="67.5695%" y="159.50"></text></g><g><title>_ZN5hyper5proto2h18dispatch32Dispatcher$LT$D$C$Bs$C$I$C$T$GT$10poll_inner17hcfd347e6d6de922aE.llvm.7481067798590672222 (3 samples, 0.37%)</title><rect x="67.4419%" y="133" width="0.3672%" height="15" fill="rgb(248,164,17)" fg:x="551" fg:w="3"/><text x="67.6919%" y="143.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (1 samples, 0.12%)</title><rect x="67.8091%" y="149" width="0.1224%" height="15" fill="rgb(222,171,42)" fg:x="554" fg:w="1"/><text x="68.0591%" y="159.50"></text></g><g><title>hyper::common::date::update (1 samples, 0.12%)</title><rect x="67.8091%" y="133" width="0.1224%" height="15" fill="rgb(243,84,45)" fg:x="554" fg:w="1"/><text x="68.0591%" y="143.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::new (1 samples, 0.12%)</title><rect x="67.9315%" y="149" width="0.1224%" height="15" fill="rgb(252,49,23)" fg:x="555" fg:w="1"/><text x="68.1815%" y="159.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="67.9315%" y="133" width="0.1224%" height="15" fill="rgb(215,19,7)" fg:x="555" fg:w="1"/><text x="68.1815%" y="143.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.12%)</title><rect x="68.0539%" y="149" width="0.1224%" height="15" fill="rgb(238,81,41)" fg:x="556" fg:w="1"/><text x="68.3039%" y="159.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (3 samples, 0.37%)</title><rect x="68.1763%" y="149" width="0.3672%" height="15" fill="rgb(210,199,37)" fg:x="557" fg:w="3"/><text x="68.4263%" y="159.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (2 samples, 0.24%)</title><rect x="68.5435%" y="149" width="0.2448%" height="15" fill="rgb(244,192,49)" fg:x="560" fg:w="2"/><text x="68.7935%" y="159.50"></text></g><g><title>hyper::proto::h1::role::parse_headers (2 samples, 0.24%)</title><rect x="68.7882%" y="149" width="0.2448%" height="15" fill="rgb(226,211,11)" fg:x="562" fg:w="2"/><text x="69.0382%" y="159.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1 samples, 0.12%)</title><rect x="68.9106%" y="133" width="0.1224%" height="15" fill="rgb(236,162,54)" fg:x="563" fg:w="1"/><text x="69.1606%" y="143.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.12%)</title><rect x="69.0330%" y="149" width="0.1224%" height="15" fill="rgb(220,229,9)" fg:x="564" fg:w="1"/><text x="69.2830%" y="159.50"></text></g><g><title>indexmap::map::core::entry::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (1 samples, 0.12%)</title><rect x="69.1554%" y="149" width="0.1224%" height="15" fill="rgb(250,87,22)" fg:x="565" fg:w="1"/><text x="69.4054%" y="159.50"></text></g><g><title>indexmap::map::core::entry::Entry&lt;K,V&gt;::or_insert (2 samples, 0.24%)</title><rect x="69.2778%" y="149" width="0.2448%" height="15" fill="rgb(239,43,17)" fg:x="566" fg:w="2"/><text x="69.5278%" y="159.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="69.5226%" y="149" width="0.1224%" height="15" fill="rgb(231,177,25)" fg:x="568" fg:w="1"/><text x="69.7726%" y="159.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.12%)</title><rect x="69.5226%" y="133" width="0.1224%" height="15" fill="rgb(219,179,1)" fg:x="568" fg:w="1"/><text x="69.7726%" y="143.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.24%)</title><rect x="69.7674%" y="85" width="0.2448%" height="15" fill="rgb(238,219,53)" fg:x="570" fg:w="2"/><text x="70.0174%" y="95.50"></text></g><g><title>markdown::construct::block_quote::start (7 samples, 0.86%)</title><rect x="69.6450%" y="149" width="0.8568%" height="15" fill="rgb(232,167,36)" fg:x="569" fg:w="7"/><text x="69.8950%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (6 samples, 0.73%)</title><rect x="69.7674%" y="133" width="0.7344%" height="15" fill="rgb(244,19,51)" fg:x="570" fg:w="6"/><text x="70.0174%" y="143.50"></text></g><g><title>realloc (6 samples, 0.73%)</title><rect x="69.7674%" y="117" width="0.7344%" height="15" fill="rgb(224,6,22)" fg:x="570" fg:w="6"/><text x="70.0174%" y="127.50"></text></g><g><title>_int_realloc (6 samples, 0.73%)</title><rect x="69.7674%" y="101" width="0.7344%" height="15" fill="rgb(224,145,5)" fg:x="570" fg:w="6"/><text x="70.0174%" y="111.50"></text></g><g><title>_int_malloc (4 samples, 0.49%)</title><rect x="70.0122%" y="85" width="0.4896%" height="15" fill="rgb(234,130,49)" fg:x="572" fg:w="4"/><text x="70.2622%" y="95.50"></text></g><g><title>malloc_consolidate (2 samples, 0.24%)</title><rect x="70.2570%" y="69" width="0.2448%" height="15" fill="rgb(254,6,2)" fg:x="574" fg:w="2"/><text x="70.5070%" y="79.50"></text></g><g><title>markdown::construct::content::chunk_inside (8 samples, 0.98%)</title><rect x="70.5018%" y="149" width="0.9792%" height="15" fill="rgb(208,96,46)" fg:x="576" fg:w="8"/><text x="70.7518%" y="159.50"></text></g><g><title>markdown::construct::definition::start (3 samples, 0.37%)</title><rect x="71.4810%" y="149" width="0.3672%" height="15" fill="rgb(239,3,39)" fg:x="584" fg:w="3"/><text x="71.7310%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (3 samples, 0.37%)</title><rect x="71.4810%" y="133" width="0.3672%" height="15" fill="rgb(233,210,1)" fg:x="584" fg:w="3"/><text x="71.7310%" y="143.50"></text></g><g><title>malloc (3 samples, 0.37%)</title><rect x="71.4810%" y="117" width="0.3672%" height="15" fill="rgb(244,137,37)" fg:x="584" fg:w="3"/><text x="71.7310%" y="127.50"></text></g><g><title>_int_malloc (2 samples, 0.24%)</title><rect x="71.6034%" y="101" width="0.2448%" height="15" fill="rgb(240,136,2)" fg:x="585" fg:w="2"/><text x="71.8534%" y="111.50"></text></g><g><title>markdown::construct::document::containers_after (1 samples, 0.12%)</title><rect x="71.8482%" y="149" width="0.1224%" height="15" fill="rgb(239,18,37)" fg:x="587" fg:w="1"/><text x="72.0982%" y="159.50"></text></g><g><title>markdown::construct::document::flow_end (2 samples, 0.24%)</title><rect x="71.9706%" y="149" width="0.2448%" height="15" fill="rgb(218,185,22)" fg:x="588" fg:w="2"/><text x="72.2206%" y="159.50"></text></g><g><title>markdown::construct::document::flow_inside (3 samples, 0.37%)</title><rect x="72.2154%" y="149" width="0.3672%" height="15" fill="rgb(225,218,4)" fg:x="590" fg:w="3"/><text x="72.4654%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (1 samples, 0.12%)</title><rect x="72.5826%" y="133" width="0.1224%" height="15" fill="rgb(230,182,32)" fg:x="593" fg:w="1"/><text x="72.8326%" y="143.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="72.5826%" y="117" width="0.1224%" height="15" fill="rgb(242,56,43)" fg:x="593" fg:w="1"/><text x="72.8326%" y="127.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="72.5826%" y="101" width="0.1224%" height="15" fill="rgb(233,99,24)" fg:x="593" fg:w="1"/><text x="72.8326%" y="111.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="72.5826%" y="85" width="0.1224%" height="15" fill="rgb(234,209,42)" fg:x="593" fg:w="1"/><text x="72.8326%" y="95.50"></text></g><g><title>markdown::construct::flow::after (5 samples, 0.61%)</title><rect x="72.5826%" y="149" width="0.6120%" height="15" fill="rgb(227,7,12)" fg:x="593" fg:w="5"/><text x="72.8326%" y="159.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (4 samples, 0.49%)</title><rect x="72.7050%" y="133" width="0.4896%" height="15" fill="rgb(245,203,43)" fg:x="594" fg:w="4"/><text x="72.9550%" y="143.50"></text></g><g><title>markdown::construct::flow::before_mdx_jsx (1 samples, 0.12%)</title><rect x="73.1946%" y="149" width="0.1224%" height="15" fill="rgb(238,205,33)" fg:x="598" fg:w="1"/><text x="73.4446%" y="159.50"></text></g><g><title>markdown::construct::flow::before_thematic_break (1 samples, 0.12%)</title><rect x="73.3170%" y="149" width="0.1224%" height="15" fill="rgb(231,56,7)" fg:x="599" fg:w="1"/><text x="73.5670%" y="159.50"></text></g><g><title>markdown::construct::flow::blank_line_after (20 samples, 2.45%)</title><rect x="73.4394%" y="149" width="2.4480%" height="15" fill="rgb(244,186,29)" fg:x="600" fg:w="20"/><text x="73.6894%" y="159.50">ma..</text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (20 samples, 2.45%)</title><rect x="73.4394%" y="133" width="2.4480%" height="15" fill="rgb(234,111,31)" fg:x="600" fg:w="20"/><text x="73.6894%" y="143.50">_Z..</text></g><g><title>markdown::state::call (1 samples, 0.12%)</title><rect x="75.7650%" y="117" width="0.1224%" height="15" fill="rgb(241,149,10)" fg:x="619" fg:w="1"/><text x="76.0150%" y="127.50"></text></g><g><title>markdown::construct::gfm_table::start (1 samples, 0.12%)</title><rect x="75.8874%" y="149" width="0.1224%" height="15" fill="rgb(249,206,44)" fg:x="620" fg:w="1"/><text x="76.1374%" y="159.50"></text></g><g><title>markdown::construct::heading_atx::data (1 samples, 0.12%)</title><rect x="76.0098%" y="149" width="0.1224%" height="15" fill="rgb(251,153,30)" fg:x="621" fg:w="1"/><text x="76.2598%" y="159.50"></text></g><g><title>markdown::construct::heading_atx::resolve (1 samples, 0.12%)</title><rect x="76.1322%" y="149" width="0.1224%" height="15" fill="rgb(239,152,38)" fg:x="622" fg:w="1"/><text x="76.3822%" y="159.50"></text></g><g><title>markdown::construct::heading_setext::start (1 samples, 0.12%)</title><rect x="76.2546%" y="149" width="0.1224%" height="15" fill="rgb(249,139,47)" fg:x="623" fg:w="1"/><text x="76.5046%" y="159.50"></text></g><g><title>markdown::construct::html_flow::before (1 samples, 0.12%)</title><rect x="76.3770%" y="149" width="0.1224%" height="15" fill="rgb(244,64,35)" fg:x="624" fg:w="1"/><text x="76.6270%" y="159.50"></text></g><g><title>markdown::construct::paragraph::inside (3 samples, 0.37%)</title><rect x="76.4994%" y="149" width="0.3672%" height="15" fill="rgb(216,46,15)" fg:x="625" fg:w="3"/><text x="76.7494%" y="159.50"></text></g><g><title>markdown::construct::partial_data::at_break (4 samples, 0.49%)</title><rect x="76.8666%" y="149" width="0.4896%" height="15" fill="rgb(250,74,19)" fg:x="628" fg:w="4"/><text x="77.1166%" y="159.50"></text></g><g><title>_ZN8markdown9tokenizer9push_impl17h49e311eb78f7f5b3E.llvm.15959340908883416241 (4 samples, 0.49%)</title><rect x="76.8666%" y="133" width="0.4896%" height="15" fill="rgb(249,42,33)" fg:x="628" fg:w="4"/><text x="77.1166%" y="143.50"></text></g><g><title>markdown::construct::partial_data::inside (10 samples, 1.22%)</title><rect x="77.3562%" y="149" width="1.2240%" height="15" fill="rgb(242,149,17)" fg:x="632" fg:w="10"/><text x="77.6062%" y="159.50"></text></g><g><title>markdown::construct::partial_data::resolve (3 samples, 0.37%)</title><rect x="78.5802%" y="149" width="0.3672%" height="15" fill="rgb(244,29,21)" fg:x="642" fg:w="3"/><text x="78.8302%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (2 samples, 0.24%)</title><rect x="78.7026%" y="133" width="0.2448%" height="15" fill="rgb(220,130,37)" fg:x="643" fg:w="2"/><text x="78.9526%" y="143.50"></text></g><g><title>malloc (2 samples, 0.24%)</title><rect x="78.7026%" y="117" width="0.2448%" height="15" fill="rgb(211,67,2)" fg:x="643" fg:w="2"/><text x="78.9526%" y="127.50"></text></g><g><title>markdown::construct::partial_space_or_tab::inside (1 samples, 0.12%)</title><rect x="78.9474%" y="149" width="0.1224%" height="15" fill="rgb(235,68,52)" fg:x="645" fg:w="1"/><text x="79.1974%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h4ba841ad32a0119cE.llvm.13226443075117753047 (1 samples, 0.12%)</title><rect x="78.9474%" y="133" width="0.1224%" height="15" fill="rgb(246,142,3)" fg:x="645" fg:w="1"/><text x="79.1974%" y="143.50"></text></g><g><title>realloc (1 samples, 0.12%)</title><rect x="78.9474%" y="117" width="0.1224%" height="15" fill="rgb(241,25,7)" fg:x="645" fg:w="1"/><text x="79.1974%" y="127.50"></text></g><g><title>markdown::construct::partial_whitespace::resolve_whitespace (1 samples, 0.12%)</title><rect x="79.0698%" y="149" width="0.1224%" height="15" fill="rgb(242,119,39)" fg:x="646" fg:w="1"/><text x="79.3198%" y="159.50"></text></g><g><title>markdown::parser::parse (1 samples, 0.12%)</title><rect x="79.1922%" y="149" width="0.1224%" height="15" fill="rgb(241,98,45)" fg:x="647" fg:w="1"/><text x="79.4422%" y="159.50"></text></g><g><title>markdown::resolve::call (1 samples, 0.12%)</title><rect x="79.3146%" y="149" width="0.1224%" height="15" fill="rgb(254,28,30)" fg:x="648" fg:w="1"/><text x="79.5646%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="79.6818%" y="117" width="0.1224%" height="15" fill="rgb(241,142,54)" fg:x="651" fg:w="1"/><text x="79.9318%" y="127.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="79.6818%" y="101" width="0.1224%" height="15" fill="rgb(222,85,15)" fg:x="651" fg:w="1"/><text x="79.9318%" y="111.50"></text></g><g><title>markdown::subtokenize::subtokenize (6 samples, 0.73%)</title><rect x="79.4370%" y="149" width="0.7344%" height="15" fill="rgb(210,85,47)" fg:x="649" fg:w="6"/><text x="79.6870%" y="159.50"></text></g><g><title>markdown::subtokenize::divide_events (4 samples, 0.49%)</title><rect x="79.6818%" y="133" width="0.4896%" height="15" fill="rgb(224,206,25)" fg:x="651" fg:w="4"/><text x="79.9318%" y="143.50"></text></g><g><title>malloc (3 samples, 0.37%)</title><rect x="79.8042%" y="117" width="0.3672%" height="15" fill="rgb(243,201,19)" fg:x="652" fg:w="3"/><text x="80.0542%" y="127.50"></text></g><g><title>_int_malloc (2 samples, 0.24%)</title><rect x="79.9266%" y="101" width="0.2448%" height="15" fill="rgb(236,59,4)" fg:x="653" fg:w="2"/><text x="80.1766%" y="111.50"></text></g><g><title>markdown::to_html::on_exit_paragraph (1 samples, 0.12%)</title><rect x="80.1714%" y="149" width="0.1224%" height="15" fill="rgb(254,179,45)" fg:x="655" fg:w="1"/><text x="80.4214%" y="159.50"></text></g><g><title>markdown::to_html_with_options (1 samples, 0.12%)</title><rect x="80.2938%" y="149" width="0.1224%" height="15" fill="rgb(226,14,10)" fg:x="656" fg:w="1"/><text x="80.5438%" y="159.50"></text></g><g><title>markdown::to_html::compile (1 samples, 0.12%)</title><rect x="80.2938%" y="133" width="0.1224%" height="15" fill="rgb(244,27,41)" fg:x="656" fg:w="1"/><text x="80.5438%" y="143.50"></text></g><g><title>markdown::tokenizer::Tokenizer::attempt (1 samples, 0.12%)</title><rect x="80.4162%" y="149" width="0.1224%" height="15" fill="rgb(235,35,32)" fg:x="657" fg:w="1"/><text x="80.6662%" y="159.50"></text></g><g><title>markdown::tokenizer::Tokenizer::flush (1 samples, 0.12%)</title><rect x="80.5386%" y="149" width="0.1224%" height="15" fill="rgb(218,68,31)" fg:x="658" fg:w="1"/><text x="80.7886%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.49%)</title><rect x="80.7834%" y="133" width="0.4896%" height="15" fill="rgb(207,120,37)" fg:x="660" fg:w="4"/><text x="81.0334%" y="143.50"></text></g><g><title>_int_free (3 samples, 0.37%)</title><rect x="81.5177%" y="117" width="0.3672%" height="15" fill="rgb(227,98,0)" fg:x="666" fg:w="3"/><text x="81.7677%" y="127.50"></text></g><g><title>cfree@GLIBC_2.2.5 (6 samples, 0.73%)</title><rect x="81.2729%" y="133" width="0.7344%" height="15" fill="rgb(207,7,3)" fg:x="664" fg:w="6"/><text x="81.5229%" y="143.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.12%)</title><rect x="81.8849%" y="117" width="0.1224%" height="15" fill="rgb(206,98,19)" fg:x="669" fg:w="1"/><text x="82.1349%" y="127.50"></text></g><g><title>markdown::util::edit_map::EditMap::consume (17 samples, 2.08%)</title><rect x="80.6610%" y="149" width="2.0808%" height="15" fill="rgb(217,5,26)" fg:x="659" fg:w="17"/><text x="80.9110%" y="159.50">m..</text></g><g><title>malloc (6 samples, 0.73%)</title><rect x="82.0073%" y="133" width="0.7344%" height="15" fill="rgb(235,190,38)" fg:x="670" fg:w="6"/><text x="82.2573%" y="143.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="82.6193%" y="117" width="0.1224%" height="15" fill="rgb(247,86,24)" fg:x="675" fg:w="1"/><text x="82.8693%" y="127.50"></text></g><g><title>markdown::util::encode::encode (9 samples, 1.10%)</title><rect x="82.7417%" y="149" width="1.1016%" height="15" fill="rgb(205,101,16)" fg:x="676" fg:w="9"/><text x="82.9917%" y="159.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1 samples, 0.12%)</title><rect x="83.8433%" y="149" width="0.1224%" height="15" fill="rgb(246,168,33)" fg:x="685" fg:w="1"/><text x="84.0933%" y="159.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="83.8433%" y="133" width="0.1224%" height="15" fill="rgb(231,114,1)" fg:x="685" fg:w="1"/><text x="84.0933%" y="143.50"></text></g><g><title>_int_free_merge_chunk (1 samples, 0.12%)</title><rect x="83.8433%" y="117" width="0.1224%" height="15" fill="rgb(207,184,53)" fg:x="685" fg:w="1"/><text x="84.0933%" y="127.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h7cd01cabee279f26E.llvm.6378141110824074303 (1 samples, 0.12%)</title><rect x="83.8433%" y="101" width="0.1224%" height="15" fill="rgb(224,95,51)" fg:x="685" fg:w="1"/><text x="84.0933%" y="111.50"></text></g><g><title>_int_memalign (1 samples, 0.12%)</title><rect x="83.8433%" y="85" width="0.1224%" height="15" fill="rgb(212,188,45)" fg:x="685" fg:w="1"/><text x="84.0933%" y="95.50"></text></g><g><title>_ZN5tokio7runtime4time54_$LT$impl$u20$tokio..runtime..time..handle..Handle$GT$15process_at_time28_$u7b$$u7b$closure$u7d$$u7d$17h8ad111a431310b49E.llvm.2330631672319492856 (1 samples, 0.12%)</title><rect x="83.8433%" y="69" width="0.1224%" height="15" fill="rgb(223,154,38)" fg:x="685" fg:w="1"/><text x="84.0933%" y="79.50"></text></g><g><title>myweb::_::&lt;impl serde::ser::Serialize for myweb::Menu&gt;::serialize (1 samples, 0.12%)</title><rect x="83.9657%" y="149" width="0.1224%" height="15" fill="rgb(251,22,52)" fg:x="686" fg:w="1"/><text x="84.2157%" y="159.50"></text></g><g><title>myweb::blog::into_info::monomorphized_function::_{{closure}} (1 samples, 0.12%)</title><rect x="84.0881%" y="149" width="0.1224%" height="15" fill="rgb(229,209,22)" fg:x="687" fg:w="1"/><text x="84.3381%" y="159.50"></text></g><g><title>myweb::page::into_info::monomorphized_function::_{{closure}} (2 samples, 0.24%)</title><rect x="84.2105%" y="149" width="0.2448%" height="15" fill="rgb(234,138,34)" fg:x="688" fg:w="2"/><text x="84.4605%" y="159.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.12%)</title><rect x="84.4553%" y="149" width="0.1224%" height="15" fill="rgb(212,95,11)" fg:x="690" fg:w="1"/><text x="84.7053%" y="159.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (33 samples, 4.04%)</title><rect x="84.5777%" y="149" width="4.0392%" height="15" fill="rgb(240,179,47)" fg:x="691" fg:w="33"/><text x="84.8277%" y="159.50">park..</text></g><g><title>syscall (31 samples, 3.79%)</title><rect x="84.8225%" y="133" width="3.7944%" height="15" fill="rgb(240,163,11)" fg:x="693" fg:w="31"/><text x="85.0725%" y="143.50">sysc..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.49%)</title><rect x="88.6169%" y="149" width="0.4896%" height="15" fill="rgb(236,37,12)" fg:x="724" fg:w="4"/><text x="88.8669%" y="159.50"></text></g><g><title>rocket::request::request::Request::from_hyp (1 samples, 0.12%)</title><rect x="89.1065%" y="149" width="0.1224%" height="15" fill="rgb(232,164,16)" fg:x="728" fg:w="1"/><text x="89.3565%" y="159.50"></text></g><g><title>rocket::router::collider::&lt;impl rocket::route::route::Route&gt;::matches (1 samples, 0.12%)</title><rect x="89.2289%" y="149" width="0.1224%" height="15" fill="rgb(244,205,15)" fg:x="729" fg:w="1"/><text x="89.4789%" y="159.50"></text></g><g><title>rocket::router::collider::formats_match (2 samples, 0.24%)</title><rect x="89.3513%" y="149" width="0.2448%" height="15" fill="rgb(223,117,47)" fg:x="730" fg:w="2"/><text x="89.6013%" y="159.50"></text></g><g><title>rocket::router::collider::paths_match (1 samples, 0.12%)</title><rect x="89.5961%" y="149" width="0.1224%" height="15" fill="rgb(244,107,35)" fg:x="732" fg:w="1"/><text x="89.8461%" y="159.50"></text></g><g><title>rocket::server::_&lt;impl rocket::rkt::Rocket&lt;rocket::phase::Orbit&gt;&gt;::route::_{{closure}} (3 samples, 0.37%)</title><rect x="89.7185%" y="149" width="0.3672%" height="15" fill="rgb(205,140,8)" fg:x="733" fg:w="3"/><text x="89.9685%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.24%)</title><rect x="89.8409%" y="133" width="0.2448%" height="15" fill="rgb(228,84,46)" fg:x="734" fg:w="2"/><text x="90.0909%" y="143.50"></text></g><g><title>rocket::server::_&lt;impl rocket::rkt::Rocket&lt;rocket::phase::Orbit&gt;&gt;::send_response::_{{closure}} (1 samples, 0.12%)</title><rect x="90.0857%" y="149" width="0.1224%" height="15" fill="rgb(254,188,9)" fg:x="736" fg:w="1"/><text x="90.3357%" y="159.50"></text></g><g><title>rocket_http::parse::uri::parser::maybe_port (1 samples, 0.12%)</title><rect x="90.2081%" y="149" width="0.1224%" height="15" fill="rgb(206,112,54)" fg:x="737" fg:w="1"/><text x="90.4581%" y="159.50"></text></g><g><title>state::cell::InitCell&lt;T&gt;::set (1 samples, 0.12%)</title><rect x="90.3305%" y="149" width="0.1224%" height="15" fill="rgb(216,84,49)" fg:x="738" fg:w="1"/><text x="90.5805%" y="159.50"></text></g><g><title>state::type_map::TypeMap&lt;K&gt;::with_map_ref (1 samples, 0.12%)</title><rect x="90.4529%" y="149" width="0.1224%" height="15" fill="rgb(214,194,35)" fg:x="739" fg:w="1"/><text x="90.7029%" y="159.50"></text></g><g><title>statx (1 samples, 0.12%)</title><rect x="90.5753%" y="149" width="0.1224%" height="15" fill="rgb(249,28,3)" fg:x="740" fg:w="1"/><text x="90.8253%" y="159.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (2 samples, 0.24%)</title><rect x="90.6977%" y="149" width="0.2448%" height="15" fill="rgb(222,56,52)" fg:x="741" fg:w="2"/><text x="90.9477%" y="159.50"></text></g><g><title>__GI___libc_open (1 samples, 0.12%)</title><rect x="90.8201%" y="133" width="0.1224%" height="15" fill="rgb(245,217,50)" fg:x="742" fg:w="1"/><text x="91.0701%" y="143.50"></text></g><g><title>__GI___pthread_enable_asynccancel (1 samples, 0.12%)</title><rect x="90.8201%" y="117" width="0.1224%" height="15" fill="rgb(213,201,24)" fg:x="742" fg:w="1"/><text x="91.0701%" y="127.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (5 samples, 0.61%)</title><rect x="90.9425%" y="149" width="0.6120%" height="15" fill="rgb(248,116,28)" fg:x="743" fg:w="5"/><text x="91.1925%" y="159.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.61%)</title><rect x="90.9425%" y="133" width="0.6120%" height="15" fill="rgb(219,72,43)" fg:x="743" fg:w="5"/><text x="91.1925%" y="143.50"></text></g><g><title>syscall (5 samples, 0.61%)</title><rect x="90.9425%" y="117" width="0.6120%" height="15" fill="rgb(209,138,14)" fg:x="743" fg:w="5"/><text x="91.1925%" y="127.50"></text></g><g><title>__GI__dl_allocate_tls (1 samples, 0.12%)</title><rect x="91.5545%" y="117" width="0.1224%" height="15" fill="rgb(222,18,33)" fg:x="748" fg:w="1"/><text x="91.8045%" y="127.50"></text></g><g><title>allocate_dtv (1 samples, 0.12%)</title><rect x="91.5545%" y="101" width="0.1224%" height="15" fill="rgb(213,199,7)" fg:x="748" fg:w="1"/><text x="91.8045%" y="111.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.12%)</title><rect x="91.5545%" y="85" width="0.1224%" height="15" fill="rgb(250,110,10)" fg:x="748" fg:w="1"/><text x="91.8045%" y="95.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (6 samples, 0.73%)</title><rect x="91.5545%" y="149" width="0.7344%" height="15" fill="rgb(248,123,6)" fg:x="748" fg:w="6"/><text x="91.8045%" y="159.50"></text></g><g><title>pthread_create@GLIBC_2.2.5 (6 samples, 0.73%)</title><rect x="91.5545%" y="133" width="0.7344%" height="15" fill="rgb(206,91,31)" fg:x="748" fg:w="6"/><text x="91.8045%" y="143.50"></text></g><g><title>__mprotect (5 samples, 0.61%)</title><rect x="91.6769%" y="117" width="0.6120%" height="15" fill="rgb(211,154,13)" fg:x="749" fg:w="5"/><text x="91.9269%" y="127.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.86%)</title><rect x="92.2889%" y="149" width="0.8568%" height="15" fill="rgb(225,148,7)" fg:x="754" fg:w="7"/><text x="92.5389%" y="159.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (7 samples, 0.86%)</title><rect x="92.2889%" y="133" width="0.8568%" height="15" fill="rgb(220,160,43)" fg:x="754" fg:w="7"/><text x="92.5389%" y="143.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.37%)</title><rect x="92.7785%" y="117" width="0.3672%" height="15" fill="rgb(213,52,39)" fg:x="758" fg:w="3"/><text x="93.0285%" y="127.50"></text></g><g><title>std::sys::sync::once::futex::Once::call (1 samples, 0.12%)</title><rect x="93.1457%" y="149" width="0.1224%" height="15" fill="rgb(243,137,7)" fg:x="761" fg:w="1"/><text x="93.3957%" y="159.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.12%)</title><rect x="93.2681%" y="149" width="0.1224%" height="15" fill="rgb(230,79,13)" fg:x="762" fg:w="1"/><text x="93.5181%" y="159.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.12%)</title><rect x="93.3905%" y="149" width="0.1224%" height="15" fill="rgb(247,105,23)" fg:x="763" fg:w="1"/><text x="93.6405%" y="159.50"></text></g><g><title>std::time::SystemTime::duration_since (1 samples, 0.12%)</title><rect x="93.5129%" y="149" width="0.1224%" height="15" fill="rgb(223,179,41)" fg:x="764" fg:w="1"/><text x="93.7629%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.12%)</title><rect x="93.5129%" y="133" width="0.1224%" height="15" fill="rgb(218,9,34)" fg:x="764" fg:w="1"/><text x="93.7629%" y="143.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (3 samples, 0.37%)</title><rect x="93.6353%" y="149" width="0.3672%" height="15" fill="rgb(222,106,8)" fg:x="765" fg:w="3"/><text x="93.8853%" y="159.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1 samples, 0.12%)</title><rect x="94.0024%" y="149" width="0.1224%" height="15" fill="rgb(211,220,0)" fg:x="768" fg:w="1"/><text x="94.2524%" y="159.50"></text></g><g><title>tokio::runtime::driver::Driver::park (1 samples, 0.12%)</title><rect x="94.1248%" y="149" width="0.1224%" height="15" fill="rgb(229,52,16)" fg:x="769" fg:w="1"/><text x="94.3748%" y="159.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (1 samples, 0.12%)</title><rect x="94.2472%" y="149" width="0.1224%" height="15" fill="rgb(212,155,18)" fg:x="770" fg:w="1"/><text x="94.4972%" y="159.50"></text></g><g><title>tokio::runtime::io::registration_set::RegistrationSet::deregister (1 samples, 0.12%)</title><rect x="94.3696%" y="149" width="0.1224%" height="15" fill="rgb(242,21,14)" fg:x="771" fg:w="1"/><text x="94.6196%" y="159.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.12%)</title><rect x="94.4920%" y="149" width="0.1224%" height="15" fill="rgb(222,19,48)" fg:x="772" fg:w="1"/><text x="94.7420%" y="159.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.12%)</title><rect x="94.6144%" y="149" width="0.1224%" height="15" fill="rgb(232,45,27)" fg:x="773" fg:w="1"/><text x="94.8644%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.12%)</title><rect x="94.7368%" y="149" width="0.1224%" height="15" fill="rgb(249,103,42)" fg:x="774" fg:w="1"/><text x="94.9868%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (1 samples, 0.12%)</title><rect x="94.8592%" y="149" width="0.1224%" height="15" fill="rgb(246,81,33)" fg:x="775" fg:w="1"/><text x="95.1092%" y="159.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.12%)</title><rect x="94.8592%" y="133" width="0.1224%" height="15" fill="rgb(252,33,42)" fg:x="775" fg:w="1"/><text x="95.1092%" y="143.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1 samples, 0.12%)</title><rect x="94.9816%" y="149" width="0.1224%" height="15" fill="rgb(209,212,41)" fg:x="776" fg:w="1"/><text x="95.2316%" y="159.50"></text></g><g><title>[libm.so.6] (2 samples, 0.24%)</title><rect x="95.7160%" y="117" width="0.2448%" height="15" fill="rgb(207,154,6)" fg:x="782" fg:w="2"/><text x="95.9660%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (8 samples, 0.98%)</title><rect x="95.1040%" y="149" width="0.9792%" height="15" fill="rgb(223,64,47)" fg:x="777" fg:w="8"/><text x="95.3540%" y="159.50"></text></g><g><title>pow (4 samples, 0.49%)</title><rect x="95.5936%" y="133" width="0.4896%" height="15" fill="rgb(211,161,38)" fg:x="781" fg:w="4"/><text x="95.8436%" y="143.50"></text></g><g><title>__pow_finite@plt (1 samples, 0.12%)</title><rect x="95.9608%" y="117" width="0.1224%" height="15" fill="rgb(219,138,40)" fg:x="784" fg:w="1"/><text x="96.2108%" y="127.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 0.12%)</title><rect x="96.0832%" y="149" width="0.1224%" height="15" fill="rgb(241,228,46)" fg:x="785" fg:w="1"/><text x="96.3332%" y="159.50"></text></g><g><title>_ZN4core3ptr1155drop_in_place$LT$hyper..common..drain..Watch..watch$LT$hyper..server..conn..upgrades..UpgradeableConnection$LT$rocket..ext..CancellableIo$LT$rocket..shutdown..Shutdown$C$tokio..net..tcp..stream..TcpStream$GT$$C$hyper..service..util..ServiceFn$LT$rocket..server..$LT$impl$u20$rocket..rkt..Rocket$LT$rocket..phase..Orbit$GT$$GT$..http_server$LT$tokio..net..tcp..listener..TcpListener$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$hyper..body..body..Body$GT$$C$hyper..common..exec..Exec$GT$$C$fn$LP$core..pin..Pin$LT$$RF$mut$u20$hyper..server..conn..upgrades..UpgradeableConnection$LT$rocket..ext..CancellableIo$LT$rocket..shutdown..Shutdown$C$tokio..net..tcp..stream..TcpStream$GT$$C$hyper..service..util..ServiceFn$LT$rocket..server..$LT$impl$u20$rocket..rkt..Rocket$LT$rocket..phase..Orbit$GT$$GT$..http_server$LT$tokio..net..tcp..listener..TcpListener$GT$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$hyper..body..body..Body$GT$$C$hyper..common..exec..Exec$GT$$GT$$RP$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5d85466430f4ecc2E.llvm.15032919299783120568 (1 samples, 0.12%)</title><rect x="96.2056%" y="133" width="0.1224%" height="15" fill="rgb(223,209,38)" fg:x="786" fg:w="1"/><text x="96.4556%" y="143.50"></text></g><g><title>_ZN6rocket6server16hyper_service_fn28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h9d2b75e04edf9049E.llvm.10703699227954456012 (3 samples, 0.37%)</title><rect x="96.3280%" y="133" width="0.3672%" height="15" fill="rgb(236,164,45)" fg:x="787" fg:w="3"/><text x="96.5780%" y="143.50"></text></g><g><title>rocket::server::_&lt;impl rocket::rkt::Rocket&lt;rocket::phase::Orbit&gt;&gt;::send_response::_{{closure}} (2 samples, 0.24%)</title><rect x="96.4504%" y="117" width="0.2448%" height="15" fill="rgb(231,15,5)" fg:x="788" fg:w="2"/><text x="96.7004%" y="127.50"></text></g><g><title>futures_channel::mpsc::Sender&lt;T&gt;::try_send (1 samples, 0.12%)</title><rect x="96.5728%" y="101" width="0.1224%" height="15" fill="rgb(252,35,15)" fg:x="789" fg:w="1"/><text x="96.8228%" y="111.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.12%)</title><rect x="96.5728%" y="85" width="0.1224%" height="15" fill="rgb(248,181,18)" fg:x="789" fg:w="1"/><text x="96.8228%" y="95.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (6 samples, 0.73%)</title><rect x="96.2056%" y="149" width="0.7344%" height="15" fill="rgb(233,39,42)" fg:x="786" fg:w="6"/><text x="96.4556%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.24%)</title><rect x="96.6952%" y="133" width="0.2448%" height="15" fill="rgb(238,110,33)" fg:x="790" fg:w="2"/><text x="96.9452%" y="143.50"></text></g><g><title>tokio::runtime::task::core::Header::get_id (1 samples, 0.12%)</title><rect x="96.9400%" y="149" width="0.1224%" height="15" fill="rgb(233,195,10)" fg:x="792" fg:w="1"/><text x="97.1900%" y="159.50"></text></g><g><title>tokio::runtime::task::core::Header::get_trailer (1 samples, 0.12%)</title><rect x="97.0624%" y="149" width="0.1224%" height="15" fill="rgb(254,105,3)" fg:x="793" fg:w="1"/><text x="97.3124%" y="159.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.12%)</title><rect x="97.1848%" y="149" width="0.1224%" height="15" fill="rgb(221,225,9)" fg:x="794" fg:w="1"/><text x="97.4348%" y="159.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.24%)</title><rect x="97.3072%" y="149" width="0.2448%" height="15" fill="rgb(224,227,45)" fg:x="795" fg:w="2"/><text x="97.5572%" y="159.50"></text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::bind (2 samples, 0.24%)</title><rect x="97.5520%" y="149" width="0.2448%" height="15" fill="rgb(229,198,43)" fg:x="797" fg:w="2"/><text x="97.8020%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.24%)</title><rect x="97.5520%" y="133" width="0.2448%" height="15" fill="rgb(206,209,35)" fg:x="797" fg:w="2"/><text x="97.8020%" y="143.50"></text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.12%)</title><rect x="97.7968%" y="149" width="0.1224%" height="15" fill="rgb(245,195,53)" fg:x="799" fg:w="1"/><text x="98.0468%" y="159.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (2 samples, 0.24%)</title><rect x="97.9192%" y="149" width="0.2448%" height="15" fill="rgb(240,92,26)" fg:x="800" fg:w="2"/><text x="98.1692%" y="159.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (5 samples, 0.61%)</title><rect x="98.1640%" y="149" width="0.6120%" height="15" fill="rgb(207,40,23)" fg:x="802" fg:w="5"/><text x="98.4140%" y="159.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (6 samples, 0.73%)</title><rect x="98.7760%" y="149" width="0.7344%" height="15" fill="rgb(223,111,35)" fg:x="807" fg:w="6"/><text x="99.0260%" y="159.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="99.3880%" y="133" width="0.1224%" height="15" fill="rgb(229,147,28)" fg:x="812" fg:w="1"/><text x="99.6380%" y="143.50"></text></g><g><title>tokio::task::spawn::spawn (2 samples, 0.24%)</title><rect x="99.5104%" y="149" width="0.2448%" height="15" fill="rgb(211,29,28)" fg:x="813" fg:w="2"/><text x="99.7604%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.24%)</title><rect x="99.5104%" y="133" width="0.2448%" height="15" fill="rgb(228,72,33)" fg:x="813" fg:w="2"/><text x="99.7604%" y="143.50"></text></g><g><title>all (817 samples, 100%)</title><rect x="0.0000%" y="181" width="100.0000%" height="15" fill="rgb(205,214,31)" fg:x="0" fg:w="817"/><text x="0.2500%" y="191.50"></text></g><g><title>rocket-worker-t (760 samples, 93.02%)</title><rect x="6.9767%" y="165" width="93.0233%" height="15" fill="rgb(224,111,15)" fg:x="57" fg:w="760"/><text x="7.2267%" y="175.50">rocket-worker-t</text></g><g><title>tracing::span::Span::record_all (2 samples, 0.24%)</title><rect x="99.7552%" y="149" width="0.2448%" height="15" fill="rgb(253,21,26)" fg:x="815" fg:w="2"/><text x="100.0052%" y="159.50"></text></g></svg></svg>